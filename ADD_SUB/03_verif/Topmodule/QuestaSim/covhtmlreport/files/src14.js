var g_data = {"name":"/home/noname/Documents/project_tiny/Floating_point/Temp_Code/02_rtl/CLA_28bit.sv","src":"module CLA_28bit(\n    input logic         i_carry,\n    input logic [27:0]  i_data_a,\n    input logic [27:0]  i_data_b,\n    output logic [27:0] o_sum,\n    output logic        o_carry\n);\n\nlogic [7:0] w_c;\nlogic [6:0] w_p;\nlogic [6:0] w_g;\n\ngenvar i;\ngenerate\n    assign w_c[0] = i_carry;\n\n    CLA_4bit CLA_4BIT_UNIT_0 (\n        .a      (i_data_a[3:0]),\n        .b      (i_data_b[3:0]),\n        .cin    (w_c[0]),\n        .sum    (o_sum[3:0]),\n        .o_p    (w_p[0]),\n        .o_g    (w_g[0])\n    );\n    \n    assign w_c[1] = w_g[0] | (w_p[0] & w_c[0]);\n    for (i = 1; i < 7; i = i + 1) begin : CLA_BLOCK_GEN\n        CLA_4bit CLA_4BIT_UNIT_1 (\n            .a      (i_data_a[(i*4)+3 : i*4]),\n            .b      (i_data_b[(i*4)+3 : i*4]),\n            .cin    (w_c[i]),\n            .sum    (o_sum[(i*4)+3 : i*4]),\n            .o_p    (w_p[i]),\n            .o_g    (w_g[i])\n        );        \n        assign w_c[i+1] = w_g[i] | (w_p[i] & w_c[i]);\n    end\nendgenerate\n\nassign o_carry = w_c[7];\n\nendmodule\n","lang":"verilog"};
processSrcData(g_data);