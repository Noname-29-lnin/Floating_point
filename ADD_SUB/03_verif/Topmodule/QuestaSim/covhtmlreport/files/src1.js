var g_data = {"name":"/home/noname/Documents/project_tiny/Floating_point/Temp_Code/03_verif/Topmodule/tb_FPU_unit.sv","src":"`timescale 1ns/1ps\n\nmodule tb_FPU_unit();\n\n    parameter NUM_OP = 1;\n\n    logic                   i_clk;\n    logic                   i_rst_n;\n    logic [NUM_OP-1:0]      i_fpu_op;\n    logic [31:0]            i_floating_a;\n    logic [31:0]            i_floating_b;\n    logic [31:0]            o_floating_result;\n\n    // Clock generation: 10ns period (100MHz)\n    initial i_clk = 0;\n    always #5 i_clk = ~i_clk;\n\n    // DUT\n    FPU_unit #(\n        .NUM_OP (NUM_OP)\n    ) dut (\n        .i_fpu_op          (i_fpu_op),\n        .i_floating_a      (i_floating_a),\n        .i_floating_b      (i_floating_b),\n        .o_floating_result (o_floating_result)\n    );\n\n    initial begin\n        $dumpfile(\"tb_FPU_unit.vcd\");\n        $dumpvars(0, tb_FPU_unit);\n    end\n\n    // Task: convert real to IEEE-754 single precision (for convenience)\n    function automatic [31:0] real_to_float(input real r);\n        return $realtobits(r);\n    endfunction\n\n    // Task: convert IEEE-754 back to real\n    function automatic real float_to_real(input [31:0] f);\n        return $bitstoreal(f);\n    endfunction\n\n    // Stimulus\n    initial begin\n        i_rst_n = 0;\n        i_fpu_op = 0;\n        i_floating_a = 0;\n        i_floating_b = 0;\n        #20;\n        i_rst_n = 1;\n\n        // === Test 1: Cộng ===\n        @(posedge i_clk);\n        i_fpu_op = 0;  // Add\n        i_floating_a = 32'b01000000101100000000000000000000;\n        i_floating_b = 32'b01000000000011001100110011001101;\n\n        @(posedge i_clk);\n        $display(\"[%0t] ADD: 5.5 + 2.2 = %f (%h)\", $time, float_to_real(o_floating_result),o_floating_result);\n\n        // === Test 2: Trừ ===\n        @(posedge i_clk);\n        i_fpu_op = 1;  // Sub\n        i_floating_a = 32'b01000000101100000000000000000000;\n        i_floating_b = 32'b01000000000011001100110011001101;\n\n        @(posedge i_clk);\n        $display(\"[%0t] ADD: 5.5 - 2.2 = %f (%h)\", $time, float_to_real(o_floating_result),o_floating_result);\n\n       // === Test 1: Cộng ===\n        @(posedge i_clk);\n        i_fpu_op = 0;  // Add\n        i_floating_a = 32'b01000000101100000000000000000000;\n        i_floating_b = 32'b11000000000011001100110011001101;\n\n        @(posedge i_clk);\n        $display(\"[%0t] ADD: 5.5 + -2.2 = %f (%h)\", $time, float_to_real(o_floating_result),o_floating_result);\n\n        // === Test 2: Trừ ===\n        @(posedge i_clk);\n        i_fpu_op = 1;  // Sub\n        i_floating_a = 32'b01000000101100000000000000000000;\n        i_floating_b = 32'b11000000000011001100110011001101;\n\n        @(posedge i_clk);\n        $display(\"[%0t] ADD: 5.5 - -2.2 = %f (%h)\", $time, float_to_real(o_floating_result),o_floating_result);\n\n        // === Test 2: Trừ ===\n        @(posedge i_clk);\n        i_fpu_op = 0;  // Sub\n        i_floating_a = 32'b11000000101100000000000000000000;\n        i_floating_b = 32'b11000000000011001100110011001101;\n\n        @(posedge i_clk);\n        $display(\"[%0t] ADD: -5.5 + -2.2 = %f (%h)\", $time, float_to_real(o_floating_result),o_floating_result);\n\n        // === Test 2: Trừ ===\n        @(posedge i_clk);\n        i_fpu_op = 1;  // Sub\n        i_floating_a = 32'b11000000101100000000000000000000;\n        i_floating_b = 32'b11000000000011001100110011001101;\n\n        @(posedge i_clk);\n        $display(\"[%0t] ADD: -5.5 - -2.2 = %f (%h)\", $time, float_to_real(o_floating_result),o_floating_result);\n\n        #20;\n        $finish;\n    end\n\nendmodule\n","lang":"verilog"};
processSrcData(g_data);