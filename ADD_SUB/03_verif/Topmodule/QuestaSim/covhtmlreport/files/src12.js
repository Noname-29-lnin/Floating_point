var g_data = {"name":"/home/noname/Documents/project_tiny/Floating_point/Temp_Code/02_rtl/COMP_28bit.sv","src":"module COMP_28bit #(\n    parameter SIZE_DATA = 28\n)(\n    input  logic [SIZE_DATA-1:0] i_data_a,\n    input  logic [SIZE_DATA-1:0] i_data_b,\n    output logic                 o_less,\n    output logic                 o_equal\n);\n    localparam NUM_BLOCK = SIZE_DATA / 4;\n\n    logic [NUM_BLOCK-1:0] w_less;\n    logic [NUM_BLOCK-1:0] w_equal;\n    logic [NUM_BLOCK:0]   less_chain;\n    logic [NUM_BLOCK:0]   equal_chain;\n\n    genvar i;\n    generate\n        for (i = 0; i < NUM_BLOCK; i++) begin : GEN_COMP_4BIT\n            COMP_4bit u_comp4 (\n                .i_data_a (i_data_a[i*4 +: 4]),\n                .i_data_b (i_data_b[i*4 +: 4]),\n                .o_less   (w_less[i]),\n                .o_equal  (w_equal[i])\n            );\n        end\n    endgenerate\n\n    generate\n        assign less_chain[NUM_BLOCK]  = 1'b0;\n        assign equal_chain[NUM_BLOCK] = 1'b1;\n        for (i = NUM_BLOCK-1; i >= 0; i--) begin : GEN_CHAIN\n            assign less_chain[i]  = w_less[i]  | (w_equal[i] & less_chain[i+1]);\n            assign equal_chain[i] = w_equal[i] & equal_chain[i+1];\n        end\n        assign o_less  = less_chain[0];\n        assign o_equal = equal_chain[0];\n    endgenerate\n\nendmodule\n","lang":"verilog"};
processSrcData(g_data);