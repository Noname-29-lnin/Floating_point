$date
	Sun Oct 26 11:21:28 2025
$end
$version
	Questa Intel Starter FPGA Edition Version 2024.3
$end
$timescale
	1ps
$end

$scope module tb_FPU_unit $end
$var parameter 32 ! NUM_OP $end
$var reg 1 " i_clk $end
$var reg 1 # i_rst_n $end
$var reg 1 $ i_fpu_op [0:0] $end
$var reg 32 % i_floating_a [31:0] $end
$var reg 32 & i_floating_b [31:0] $end
$var reg 32 ' o_floating_result [31:0] $end

$scope function real_to_float $end
$upscope $end

$scope function float_to_real $end
$upscope $end

$scope module dut $end
$var parameter 32 ( NUM_OP $end
$var wire 1 ) i_fpu_op [0] $end
$var wire 1 * i_floating_a [31] $end
$var wire 1 + i_floating_a [30] $end
$var wire 1 , i_floating_a [29] $end
$var wire 1 - i_floating_a [28] $end
$var wire 1 . i_floating_a [27] $end
$var wire 1 / i_floating_a [26] $end
$var wire 1 0 i_floating_a [25] $end
$var wire 1 1 i_floating_a [24] $end
$var wire 1 2 i_floating_a [23] $end
$var wire 1 3 i_floating_a [22] $end
$var wire 1 4 i_floating_a [21] $end
$var wire 1 5 i_floating_a [20] $end
$var wire 1 6 i_floating_a [19] $end
$var wire 1 7 i_floating_a [18] $end
$var wire 1 8 i_floating_a [17] $end
$var wire 1 9 i_floating_a [16] $end
$var wire 1 : i_floating_a [15] $end
$var wire 1 ; i_floating_a [14] $end
$var wire 1 < i_floating_a [13] $end
$var wire 1 = i_floating_a [12] $end
$var wire 1 > i_floating_a [11] $end
$var wire 1 ? i_floating_a [10] $end
$var wire 1 @ i_floating_a [9] $end
$var wire 1 A i_floating_a [8] $end
$var wire 1 B i_floating_a [7] $end
$var wire 1 C i_floating_a [6] $end
$var wire 1 D i_floating_a [5] $end
$var wire 1 E i_floating_a [4] $end
$var wire 1 F i_floating_a [3] $end
$var wire 1 G i_floating_a [2] $end
$var wire 1 H i_floating_a [1] $end
$var wire 1 I i_floating_a [0] $end
$var wire 1 J i_floating_b [31] $end
$var wire 1 K i_floating_b [30] $end
$var wire 1 L i_floating_b [29] $end
$var wire 1 M i_floating_b [28] $end
$var wire 1 N i_floating_b [27] $end
$var wire 1 O i_floating_b [26] $end
$var wire 1 P i_floating_b [25] $end
$var wire 1 Q i_floating_b [24] $end
$var wire 1 R i_floating_b [23] $end
$var wire 1 S i_floating_b [22] $end
$var wire 1 T i_floating_b [21] $end
$var wire 1 U i_floating_b [20] $end
$var wire 1 V i_floating_b [19] $end
$var wire 1 W i_floating_b [18] $end
$var wire 1 X i_floating_b [17] $end
$var wire 1 Y i_floating_b [16] $end
$var wire 1 Z i_floating_b [15] $end
$var wire 1 [ i_floating_b [14] $end
$var wire 1 \ i_floating_b [13] $end
$var wire 1 ] i_floating_b [12] $end
$var wire 1 ^ i_floating_b [11] $end
$var wire 1 _ i_floating_b [10] $end
$var wire 1 ` i_floating_b [9] $end
$var wire 1 a i_floating_b [8] $end
$var wire 1 b i_floating_b [7] $end
$var wire 1 c i_floating_b [6] $end
$var wire 1 d i_floating_b [5] $end
$var wire 1 e i_floating_b [4] $end
$var wire 1 f i_floating_b [3] $end
$var wire 1 g i_floating_b [2] $end
$var wire 1 h i_floating_b [1] $end
$var wire 1 i i_floating_b [0] $end
$var reg 32 j o_floating_result [31:0] $end
$var reg 1 k w_sign_a $end
$var reg 1 l w_sign_b $end
$var reg 8 m w_exponent_a [7:0] $end
$var reg 8 n w_exponent_b [7:0] $end
$var reg 24 o w_mantissa_a [23:0] $end
$var reg 24 p w_mantissa_b [23:0] $end
$var reg 1 q w_sign_result $end
$var reg 8 r w_exponent_result [7:0] $end
$var reg 24 s w_mantissa_result [23:0] $end
$var reg 1 t w_EXPSWAP_compare $end
$var reg 8 u w_EXPSWAP_max [7:0] $end
$var reg 8 v w_EXPSWAP_min [7:0] $end
$var reg 8 w w_EXPSUB_diff_value [7:0] $end
$var reg 1 x w_MAN_SWAP1_sign_max $end
$var reg 1 y w_MAN_SWAP1_sign_min $end
$var reg 24 z w_MAN_SWAP1_max [23:0] $end
$var reg 24 { w_MAN_SWAP1_min [23:0] $end
$var reg 28 | w_MAN_SHF_RIGHT_min [27:0] $end
$var reg 28 } w_MAN_SHF_RIGHT_max [27:0] $end
$var reg 1 ~ w_MAN_COMP_28BIT_less $end
$var reg 1 !! w_MAN_PRE_SWAP_BY_MAN_compara $end
$var reg 1 "! w_MAN_PRE_SWAP_BY_MAN_sign_max $end
$var reg 1 #! w_MAN_PRE_SWAP_BY_MAN_sign_min $end
$var reg 28 $! w_MAN_PRE_SWAP_BY_MAN_max [27:0] $end
$var reg 28 %! w_MAN_PRE_SWAP_BY_MAN_min [27:0] $end
$var reg 28 &! w_MAN_ALU_man [27:0] $end
$var reg 1 '! w_MAN_ALU_overflow $end
$var reg 5 (! w_LOPD_24BIT_one_position [4:0] $end
$var reg 1 )! w_LOPD_24BIT_zero_flag $end
$var reg 8 *! w_EXP_ADJUST_result [7:0] $end
$var reg 28 +! w_NORMALIZATION_man [27:0] $end

$scope module EXP_SWAP_UNIT $end
$var parameter 32 ,! SIZE_DATA $end
$var wire 1 -! i_data_a [7] $end
$var wire 1 .! i_data_a [6] $end
$var wire 1 /! i_data_a [5] $end
$var wire 1 0! i_data_a [4] $end
$var wire 1 1! i_data_a [3] $end
$var wire 1 2! i_data_a [2] $end
$var wire 1 3! i_data_a [1] $end
$var wire 1 4! i_data_a [0] $end
$var wire 1 5! i_data_b [7] $end
$var wire 1 6! i_data_b [6] $end
$var wire 1 7! i_data_b [5] $end
$var wire 1 8! i_data_b [4] $end
$var wire 1 9! i_data_b [3] $end
$var wire 1 :! i_data_b [2] $end
$var wire 1 ;! i_data_b [1] $end
$var wire 1 <! i_data_b [0] $end
$var reg 1 =! o_compare $end
$var reg 8 >! o_less_data [7:0] $end
$var reg 8 ?! o_greater_data [7:0] $end

$scope module COMP_LESS_UNIT $end
$var parameter 32 @! SIZE_DATA $end
$var wire 1 -! i_data_a [7] $end
$var wire 1 .! i_data_a [6] $end
$var wire 1 /! i_data_a [5] $end
$var wire 1 0! i_data_a [4] $end
$var wire 1 1! i_data_a [3] $end
$var wire 1 2! i_data_a [2] $end
$var wire 1 3! i_data_a [1] $end
$var wire 1 4! i_data_a [0] $end
$var wire 1 5! i_data_b [7] $end
$var wire 1 6! i_data_b [6] $end
$var wire 1 7! i_data_b [5] $end
$var wire 1 8! i_data_b [4] $end
$var wire 1 9! i_data_b [3] $end
$var wire 1 :! i_data_b [2] $end
$var wire 1 ;! i_data_b [1] $end
$var wire 1 <! i_data_b [0] $end
$var reg 1 A! o_less $end
$var reg 1 B! w_less_low $end
$var reg 1 C! w_equal_low $end
$var reg 1 D! w_less_high $end
$var reg 1 E! w_equal_high $end

$scope module u_low $end
$var wire 1 1! i_data_a [3] $end
$var wire 1 2! i_data_a [2] $end
$var wire 1 3! i_data_a [1] $end
$var wire 1 4! i_data_a [0] $end
$var wire 1 9! i_data_b [3] $end
$var wire 1 :! i_data_b [2] $end
$var wire 1 ;! i_data_b [1] $end
$var wire 1 <! i_data_b [0] $end
$var reg 1 F! o_less $end
$var reg 1 G! o_equal $end
$var reg 1 H! w_less_low $end
$var reg 1 I! w_equal_low $end
$var reg 1 J! w_less_high $end
$var reg 1 K! w_equal_high $end

$scope module u_low $end
$var wire 1 3! i_data_a [1] $end
$var wire 1 4! i_data_a [0] $end
$var wire 1 ;! i_data_b [1] $end
$var wire 1 <! i_data_b [0] $end
$var reg 1 L! o_less $end
$var reg 1 M! o_equal $end
$upscope $end

$scope module u_high $end
$var wire 1 1! i_data_a [1] $end
$var wire 1 2! i_data_a [0] $end
$var wire 1 9! i_data_b [1] $end
$var wire 1 :! i_data_b [0] $end
$var reg 1 N! o_less $end
$var reg 1 O! o_equal $end
$upscope $end
$upscope $end

$scope module u_high $end
$var wire 1 -! i_data_a [3] $end
$var wire 1 .! i_data_a [2] $end
$var wire 1 /! i_data_a [1] $end
$var wire 1 0! i_data_a [0] $end
$var wire 1 5! i_data_b [3] $end
$var wire 1 6! i_data_b [2] $end
$var wire 1 7! i_data_b [1] $end
$var wire 1 8! i_data_b [0] $end
$var reg 1 P! o_less $end
$var reg 1 Q! o_equal $end
$var reg 1 R! w_less_low $end
$var reg 1 S! w_equal_low $end
$var reg 1 T! w_less_high $end
$var reg 1 U! w_equal_high $end

$scope module u_low $end
$var wire 1 /! i_data_a [1] $end
$var wire 1 0! i_data_a [0] $end
$var wire 1 7! i_data_b [1] $end
$var wire 1 8! i_data_b [0] $end
$var reg 1 V! o_less $end
$var reg 1 W! o_equal $end
$upscope $end

$scope module u_high $end
$var wire 1 -! i_data_a [1] $end
$var wire 1 .! i_data_a [0] $end
$var wire 1 5! i_data_b [1] $end
$var wire 1 6! i_data_b [0] $end
$var reg 1 X! o_less $end
$var reg 1 Y! o_equal $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module EXP_SUB_UNIT $end
$var parameter 32 Z! SIZE_EXP_SUB $end
$var wire 1 [! i_data_a [7] $end
$var wire 1 \! i_data_a [6] $end
$var wire 1 ]! i_data_a [5] $end
$var wire 1 ^! i_data_a [4] $end
$var wire 1 _! i_data_a [3] $end
$var wire 1 `! i_data_a [2] $end
$var wire 1 a! i_data_a [1] $end
$var wire 1 b! i_data_a [0] $end
$var wire 1 c! i_data_b [7] $end
$var wire 1 d! i_data_b [6] $end
$var wire 1 e! i_data_b [5] $end
$var wire 1 f! i_data_b [4] $end
$var wire 1 g! i_data_b [3] $end
$var wire 1 h! i_data_b [2] $end
$var wire 1 i! i_data_b [1] $end
$var wire 1 j! i_data_b [0] $end
$var reg 8 k! o_sub [7:0] $end
$var reg 8 l! w_data_b [7:0] $end

$scope module CLA_8BIT_UNIT $end
$var wire 1 m! i_carry $end
$var wire 1 [! i_data_a [7] $end
$var wire 1 \! i_data_a [6] $end
$var wire 1 ]! i_data_a [5] $end
$var wire 1 ^! i_data_a [4] $end
$var wire 1 _! i_data_a [3] $end
$var wire 1 `! i_data_a [2] $end
$var wire 1 a! i_data_a [1] $end
$var wire 1 b! i_data_a [0] $end
$var wire 1 n! i_data_b [7] $end
$var wire 1 o! i_data_b [6] $end
$var wire 1 p! i_data_b [5] $end
$var wire 1 q! i_data_b [4] $end
$var wire 1 r! i_data_b [3] $end
$var wire 1 s! i_data_b [2] $end
$var wire 1 t! i_data_b [1] $end
$var wire 1 u! i_data_b [0] $end
$var reg 8 v! o_sum [7:0] $end
$var reg 1 w! o_carry $end
$var reg 2 x! w_P [1:0] $end
$var reg 2 y! w_G [1:0] $end
$var reg 1 z! w_C $end

$scope module CLA_4BIT_UNIT_0 $end
$var wire 1 _! a [3] $end
$var wire 1 `! a [2] $end
$var wire 1 a! a [1] $end
$var wire 1 b! a [0] $end
$var wire 1 r! b [3] $end
$var wire 1 s! b [2] $end
$var wire 1 t! b [1] $end
$var wire 1 u! b [0] $end
$var wire 1 m! cin $end
$var reg 4 {! sum [3:0] $end
$var reg 1 |! o_p $end
$var reg 1 }! o_g $end
$var reg 4 ~! w_g [3:0] $end
$var reg 4 !" w_p [3:0] $end
$var reg 4 "" w_c [3:0] $end
$upscope $end

$scope module CLA_4BIT_UNIT_1 $end
$var wire 1 [! a [3] $end
$var wire 1 \! a [2] $end
$var wire 1 ]! a [1] $end
$var wire 1 ^! a [0] $end
$var wire 1 n! b [3] $end
$var wire 1 o! b [2] $end
$var wire 1 p! b [1] $end
$var wire 1 q! b [0] $end
$var wire 1 #" cin $end
$var reg 4 $" sum [3:0] $end
$var reg 1 %" o_p $end
$var reg 1 &" o_g $end
$var reg 4 '" w_g [3:0] $end
$var reg 4 (" w_p [3:0] $end
$var reg 4 )" w_c [3:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module MAN_PRE_SWAP_BY_EXPONENT_UNIT $end
$var parameter 32 *" SIZE_MAN $end
$var wire 1 +" i_sign_a $end
$var wire 1 ," i_sign_b $end
$var wire 1 -" i_man_a [23] $end
$var wire 1 ." i_man_a [22] $end
$var wire 1 /" i_man_a [21] $end
$var wire 1 0" i_man_a [20] $end
$var wire 1 1" i_man_a [19] $end
$var wire 1 2" i_man_a [18] $end
$var wire 1 3" i_man_a [17] $end
$var wire 1 4" i_man_a [16] $end
$var wire 1 5" i_man_a [15] $end
$var wire 1 6" i_man_a [14] $end
$var wire 1 7" i_man_a [13] $end
$var wire 1 8" i_man_a [12] $end
$var wire 1 9" i_man_a [11] $end
$var wire 1 :" i_man_a [10] $end
$var wire 1 ;" i_man_a [9] $end
$var wire 1 <" i_man_a [8] $end
$var wire 1 =" i_man_a [7] $end
$var wire 1 >" i_man_a [6] $end
$var wire 1 ?" i_man_a [5] $end
$var wire 1 @" i_man_a [4] $end
$var wire 1 A" i_man_a [3] $end
$var wire 1 B" i_man_a [2] $end
$var wire 1 C" i_man_a [1] $end
$var wire 1 D" i_man_a [0] $end
$var wire 1 E" i_man_b [23] $end
$var wire 1 F" i_man_b [22] $end
$var wire 1 G" i_man_b [21] $end
$var wire 1 H" i_man_b [20] $end
$var wire 1 I" i_man_b [19] $end
$var wire 1 J" i_man_b [18] $end
$var wire 1 K" i_man_b [17] $end
$var wire 1 L" i_man_b [16] $end
$var wire 1 M" i_man_b [15] $end
$var wire 1 N" i_man_b [14] $end
$var wire 1 O" i_man_b [13] $end
$var wire 1 P" i_man_b [12] $end
$var wire 1 Q" i_man_b [11] $end
$var wire 1 R" i_man_b [10] $end
$var wire 1 S" i_man_b [9] $end
$var wire 1 T" i_man_b [8] $end
$var wire 1 U" i_man_b [7] $end
$var wire 1 V" i_man_b [6] $end
$var wire 1 W" i_man_b [5] $end
$var wire 1 X" i_man_b [4] $end
$var wire 1 Y" i_man_b [3] $end
$var wire 1 Z" i_man_b [2] $end
$var wire 1 [" i_man_b [1] $end
$var wire 1 \" i_man_b [0] $end
$var wire 1 ]" i_compare $end
$var reg 1 ^" o_sign_max $end
$var reg 1 _" o_sign_min $end
$var reg 24 `" o_man_max [23:0] $end
$var reg 24 a" o_man_min [23:0] $end
$var reg 25 b" w_a [24:0] $end
$var reg 25 c" w_b [24:0] $end
$var reg 25 d" w_max [24:0] $end
$var reg 25 e" w_min [24:0] $end
$upscope $end

$scope module SHF_RIGHT_28BIT_UNIT $end
$var parameter 32 f" SIZE_DATA $end
$var parameter 32 g" SIZE_SHIFT $end
$var wire 1 h" i_shift_number [4] $end
$var wire 1 i" i_shift_number [3] $end
$var wire 1 j" i_shift_number [2] $end
$var wire 1 k" i_shift_number [1] $end
$var wire 1 l" i_shift_number [0] $end
$var wire 1 m" i_data [27] $end
$var wire 1 n" i_data [26] $end
$var wire 1 o" i_data [25] $end
$var wire 1 p" i_data [24] $end
$var wire 1 q" i_data [23] $end
$var wire 1 r" i_data [22] $end
$var wire 1 s" i_data [21] $end
$var wire 1 t" i_data [20] $end
$var wire 1 u" i_data [19] $end
$var wire 1 v" i_data [18] $end
$var wire 1 w" i_data [17] $end
$var wire 1 x" i_data [16] $end
$var wire 1 y" i_data [15] $end
$var wire 1 z" i_data [14] $end
$var wire 1 {" i_data [13] $end
$var wire 1 |" i_data [12] $end
$var wire 1 }" i_data [11] $end
$var wire 1 ~" i_data [10] $end
$var wire 1 !# i_data [9] $end
$var wire 1 "# i_data [8] $end
$var wire 1 ## i_data [7] $end
$var wire 1 $# i_data [6] $end
$var wire 1 %# i_data [5] $end
$var wire 1 &# i_data [4] $end
$var wire 1 '# i_data [3] $end
$var wire 1 (# i_data [2] $end
$var wire 1 )# i_data [1] $end
$var wire 1 *# i_data [0] $end
$var reg 28 +# o_data [27:0] $end

$scope begin GEN_SHIFT[4] $end
$var parameter 32 ,# i $end
$var parameter 32 -# SHIFT_AMT $end
$upscope $end

$scope begin GEN_SHIFT[3] $end
$var parameter 32 .# i $end
$var parameter 32 /# SHIFT_AMT $end
$upscope $end

$scope begin GEN_SHIFT[2] $end
$var parameter 32 0# i $end
$var parameter 32 1# SHIFT_AMT $end
$upscope $end

$scope begin GEN_SHIFT[1] $end
$var parameter 32 2# i $end
$var parameter 32 3# SHIFT_AMT $end
$upscope $end

$scope begin GEN_SHIFT[0] $end
$var parameter 32 4# i $end
$var parameter 32 5# SHIFT_AMT $end
$upscope $end
$upscope $end

$scope module MAN_COMP_28BIT_UNIT $end
$var parameter 32 6# SIZE_DATA $end
$var parameter 32 7# NUM_BLOCK $end
$var wire 1 8# i_data_a [27] $end
$var wire 1 9# i_data_a [26] $end
$var wire 1 :# i_data_a [25] $end
$var wire 1 ;# i_data_a [24] $end
$var wire 1 <# i_data_a [23] $end
$var wire 1 =# i_data_a [22] $end
$var wire 1 ># i_data_a [21] $end
$var wire 1 ?# i_data_a [20] $end
$var wire 1 @# i_data_a [19] $end
$var wire 1 A# i_data_a [18] $end
$var wire 1 B# i_data_a [17] $end
$var wire 1 C# i_data_a [16] $end
$var wire 1 D# i_data_a [15] $end
$var wire 1 E# i_data_a [14] $end
$var wire 1 F# i_data_a [13] $end
$var wire 1 G# i_data_a [12] $end
$var wire 1 H# i_data_a [11] $end
$var wire 1 I# i_data_a [10] $end
$var wire 1 J# i_data_a [9] $end
$var wire 1 K# i_data_a [8] $end
$var wire 1 L# i_data_a [7] $end
$var wire 1 M# i_data_a [6] $end
$var wire 1 N# i_data_a [5] $end
$var wire 1 O# i_data_a [4] $end
$var wire 1 P# i_data_a [3] $end
$var wire 1 Q# i_data_a [2] $end
$var wire 1 R# i_data_a [1] $end
$var wire 1 S# i_data_a [0] $end
$var wire 1 T# i_data_b [27] $end
$var wire 1 U# i_data_b [26] $end
$var wire 1 V# i_data_b [25] $end
$var wire 1 W# i_data_b [24] $end
$var wire 1 X# i_data_b [23] $end
$var wire 1 Y# i_data_b [22] $end
$var wire 1 Z# i_data_b [21] $end
$var wire 1 [# i_data_b [20] $end
$var wire 1 \# i_data_b [19] $end
$var wire 1 ]# i_data_b [18] $end
$var wire 1 ^# i_data_b [17] $end
$var wire 1 _# i_data_b [16] $end
$var wire 1 `# i_data_b [15] $end
$var wire 1 a# i_data_b [14] $end
$var wire 1 b# i_data_b [13] $end
$var wire 1 c# i_data_b [12] $end
$var wire 1 d# i_data_b [11] $end
$var wire 1 e# i_data_b [10] $end
$var wire 1 f# i_data_b [9] $end
$var wire 1 g# i_data_b [8] $end
$var wire 1 h# i_data_b [7] $end
$var wire 1 i# i_data_b [6] $end
$var wire 1 j# i_data_b [5] $end
$var wire 1 k# i_data_b [4] $end
$var wire 1 l# i_data_b [3] $end
$var wire 1 m# i_data_b [2] $end
$var wire 1 n# i_data_b [1] $end
$var wire 1 o# i_data_b [0] $end
$var reg 1 p# o_less $end
$var reg 1 q# o_equal $end
$var reg 7 r# w_less [6:0] $end
$var reg 7 s# w_equal [6:0] $end
$var reg 8 t# less_chain [7:0] $end
$var reg 8 u# equal_chain [7:0] $end

$scope begin GEN_CHAIN[0] $end
$var parameter 32 v# i $end
$upscope $end

$scope begin GEN_CHAIN[1] $end
$var parameter 32 w# i $end
$upscope $end

$scope begin GEN_CHAIN[2] $end
$var parameter 32 x# i $end
$upscope $end

$scope begin GEN_CHAIN[3] $end
$var parameter 32 y# i $end
$upscope $end

$scope begin GEN_CHAIN[4] $end
$var parameter 32 z# i $end
$upscope $end

$scope begin GEN_CHAIN[5] $end
$var parameter 32 {# i $end
$upscope $end

$scope begin GEN_CHAIN[6] $end
$var parameter 32 |# i $end
$upscope $end

$scope begin GEN_COMP_4BIT[6] $end
$var parameter 32 }# i $end

$scope module u_comp4 $end
$var wire 1 8# i_data_a [3] $end
$var wire 1 9# i_data_a [2] $end
$var wire 1 :# i_data_a [1] $end
$var wire 1 ;# i_data_a [0] $end
$var wire 1 T# i_data_b [3] $end
$var wire 1 U# i_data_b [2] $end
$var wire 1 V# i_data_b [1] $end
$var wire 1 W# i_data_b [0] $end
$var reg 1 ~# o_less $end
$var reg 1 !$ o_equal $end
$var reg 1 "$ w_less_low $end
$var reg 1 #$ w_equal_low $end
$var reg 1 $$ w_less_high $end
$var reg 1 %$ w_equal_high $end

$scope module u_low $end
$var wire 1 :# i_data_a [1] $end
$var wire 1 ;# i_data_a [0] $end
$var wire 1 V# i_data_b [1] $end
$var wire 1 W# i_data_b [0] $end
$var reg 1 &$ o_less $end
$var reg 1 '$ o_equal $end
$upscope $end

$scope module u_high $end
$var wire 1 8# i_data_a [1] $end
$var wire 1 9# i_data_a [0] $end
$var wire 1 T# i_data_b [1] $end
$var wire 1 U# i_data_b [0] $end
$var reg 1 ($ o_less $end
$var reg 1 )$ o_equal $end
$upscope $end
$upscope $end
$upscope $end

$scope begin GEN_COMP_4BIT[5] $end
$var parameter 32 *$ i $end

$scope module u_comp4 $end
$var wire 1 <# i_data_a [3] $end
$var wire 1 =# i_data_a [2] $end
$var wire 1 ># i_data_a [1] $end
$var wire 1 ?# i_data_a [0] $end
$var wire 1 X# i_data_b [3] $end
$var wire 1 Y# i_data_b [2] $end
$var wire 1 Z# i_data_b [1] $end
$var wire 1 [# i_data_b [0] $end
$var reg 1 +$ o_less $end
$var reg 1 ,$ o_equal $end
$var reg 1 -$ w_less_low $end
$var reg 1 .$ w_equal_low $end
$var reg 1 /$ w_less_high $end
$var reg 1 0$ w_equal_high $end

$scope module u_low $end
$var wire 1 ># i_data_a [1] $end
$var wire 1 ?# i_data_a [0] $end
$var wire 1 Z# i_data_b [1] $end
$var wire 1 [# i_data_b [0] $end
$var reg 1 1$ o_less $end
$var reg 1 2$ o_equal $end
$upscope $end

$scope module u_high $end
$var wire 1 <# i_data_a [1] $end
$var wire 1 =# i_data_a [0] $end
$var wire 1 X# i_data_b [1] $end
$var wire 1 Y# i_data_b [0] $end
$var reg 1 3$ o_less $end
$var reg 1 4$ o_equal $end
$upscope $end
$upscope $end
$upscope $end

$scope begin GEN_COMP_4BIT[4] $end
$var parameter 32 5$ i $end

$scope module u_comp4 $end
$var wire 1 @# i_data_a [3] $end
$var wire 1 A# i_data_a [2] $end
$var wire 1 B# i_data_a [1] $end
$var wire 1 C# i_data_a [0] $end
$var wire 1 \# i_data_b [3] $end
$var wire 1 ]# i_data_b [2] $end
$var wire 1 ^# i_data_b [1] $end
$var wire 1 _# i_data_b [0] $end
$var reg 1 6$ o_less $end
$var reg 1 7$ o_equal $end
$var reg 1 8$ w_less_low $end
$var reg 1 9$ w_equal_low $end
$var reg 1 :$ w_less_high $end
$var reg 1 ;$ w_equal_high $end

$scope module u_low $end
$var wire 1 B# i_data_a [1] $end
$var wire 1 C# i_data_a [0] $end
$var wire 1 ^# i_data_b [1] $end
$var wire 1 _# i_data_b [0] $end
$var reg 1 <$ o_less $end
$var reg 1 =$ o_equal $end
$upscope $end

$scope module u_high $end
$var wire 1 @# i_data_a [1] $end
$var wire 1 A# i_data_a [0] $end
$var wire 1 \# i_data_b [1] $end
$var wire 1 ]# i_data_b [0] $end
$var reg 1 >$ o_less $end
$var reg 1 ?$ o_equal $end
$upscope $end
$upscope $end
$upscope $end

$scope begin GEN_COMP_4BIT[3] $end
$var parameter 32 @$ i $end

$scope module u_comp4 $end
$var wire 1 D# i_data_a [3] $end
$var wire 1 E# i_data_a [2] $end
$var wire 1 F# i_data_a [1] $end
$var wire 1 G# i_data_a [0] $end
$var wire 1 `# i_data_b [3] $end
$var wire 1 a# i_data_b [2] $end
$var wire 1 b# i_data_b [1] $end
$var wire 1 c# i_data_b [0] $end
$var reg 1 A$ o_less $end
$var reg 1 B$ o_equal $end
$var reg 1 C$ w_less_low $end
$var reg 1 D$ w_equal_low $end
$var reg 1 E$ w_less_high $end
$var reg 1 F$ w_equal_high $end

$scope module u_low $end
$var wire 1 F# i_data_a [1] $end
$var wire 1 G# i_data_a [0] $end
$var wire 1 b# i_data_b [1] $end
$var wire 1 c# i_data_b [0] $end
$var reg 1 G$ o_less $end
$var reg 1 H$ o_equal $end
$upscope $end

$scope module u_high $end
$var wire 1 D# i_data_a [1] $end
$var wire 1 E# i_data_a [0] $end
$var wire 1 `# i_data_b [1] $end
$var wire 1 a# i_data_b [0] $end
$var reg 1 I$ o_less $end
$var reg 1 J$ o_equal $end
$upscope $end
$upscope $end
$upscope $end

$scope begin GEN_COMP_4BIT[2] $end
$var parameter 32 K$ i $end

$scope module u_comp4 $end
$var wire 1 H# i_data_a [3] $end
$var wire 1 I# i_data_a [2] $end
$var wire 1 J# i_data_a [1] $end
$var wire 1 K# i_data_a [0] $end
$var wire 1 d# i_data_b [3] $end
$var wire 1 e# i_data_b [2] $end
$var wire 1 f# i_data_b [1] $end
$var wire 1 g# i_data_b [0] $end
$var reg 1 L$ o_less $end
$var reg 1 M$ o_equal $end
$var reg 1 N$ w_less_low $end
$var reg 1 O$ w_equal_low $end
$var reg 1 P$ w_less_high $end
$var reg 1 Q$ w_equal_high $end

$scope module u_low $end
$var wire 1 J# i_data_a [1] $end
$var wire 1 K# i_data_a [0] $end
$var wire 1 f# i_data_b [1] $end
$var wire 1 g# i_data_b [0] $end
$var reg 1 R$ o_less $end
$var reg 1 S$ o_equal $end
$upscope $end

$scope module u_high $end
$var wire 1 H# i_data_a [1] $end
$var wire 1 I# i_data_a [0] $end
$var wire 1 d# i_data_b [1] $end
$var wire 1 e# i_data_b [0] $end
$var reg 1 T$ o_less $end
$var reg 1 U$ o_equal $end
$upscope $end
$upscope $end
$upscope $end

$scope begin GEN_COMP_4BIT[1] $end
$var parameter 32 V$ i $end

$scope module u_comp4 $end
$var wire 1 L# i_data_a [3] $end
$var wire 1 M# i_data_a [2] $end
$var wire 1 N# i_data_a [1] $end
$var wire 1 O# i_data_a [0] $end
$var wire 1 h# i_data_b [3] $end
$var wire 1 i# i_data_b [2] $end
$var wire 1 j# i_data_b [1] $end
$var wire 1 k# i_data_b [0] $end
$var reg 1 W$ o_less $end
$var reg 1 X$ o_equal $end
$var reg 1 Y$ w_less_low $end
$var reg 1 Z$ w_equal_low $end
$var reg 1 [$ w_less_high $end
$var reg 1 \$ w_equal_high $end

$scope module u_low $end
$var wire 1 N# i_data_a [1] $end
$var wire 1 O# i_data_a [0] $end
$var wire 1 j# i_data_b [1] $end
$var wire 1 k# i_data_b [0] $end
$var reg 1 ]$ o_less $end
$var reg 1 ^$ o_equal $end
$upscope $end

$scope module u_high $end
$var wire 1 L# i_data_a [1] $end
$var wire 1 M# i_data_a [0] $end
$var wire 1 h# i_data_b [1] $end
$var wire 1 i# i_data_b [0] $end
$var reg 1 _$ o_less $end
$var reg 1 `$ o_equal $end
$upscope $end
$upscope $end
$upscope $end

$scope begin GEN_COMP_4BIT[0] $end
$var parameter 32 a$ i $end

$scope module u_comp4 $end
$var wire 1 P# i_data_a [3] $end
$var wire 1 Q# i_data_a [2] $end
$var wire 1 R# i_data_a [1] $end
$var wire 1 S# i_data_a [0] $end
$var wire 1 l# i_data_b [3] $end
$var wire 1 m# i_data_b [2] $end
$var wire 1 n# i_data_b [1] $end
$var wire 1 o# i_data_b [0] $end
$var reg 1 b$ o_less $end
$var reg 1 c$ o_equal $end
$var reg 1 d$ w_less_low $end
$var reg 1 e$ w_equal_low $end
$var reg 1 f$ w_less_high $end
$var reg 1 g$ w_equal_high $end

$scope module u_low $end
$var wire 1 R# i_data_a [1] $end
$var wire 1 S# i_data_a [0] $end
$var wire 1 n# i_data_b [1] $end
$var wire 1 o# i_data_b [0] $end
$var reg 1 h$ o_less $end
$var reg 1 i$ o_equal $end
$upscope $end

$scope module u_high $end
$var wire 1 P# i_data_a [1] $end
$var wire 1 Q# i_data_a [0] $end
$var wire 1 l# i_data_b [1] $end
$var wire 1 m# i_data_b [0] $end
$var reg 1 j$ o_less $end
$var reg 1 k$ o_equal $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module MAN_PRE_SWAP_BY_MAN_UNIT $end
$var parameter 32 l$ SIZE_MAN $end
$var wire 1 m$ i_sign_a $end
$var wire 1 n$ i_sign_b $end
$var wire 1 o$ i_man_a [27] $end
$var wire 1 p$ i_man_a [26] $end
$var wire 1 q$ i_man_a [25] $end
$var wire 1 r$ i_man_a [24] $end
$var wire 1 s$ i_man_a [23] $end
$var wire 1 t$ i_man_a [22] $end
$var wire 1 u$ i_man_a [21] $end
$var wire 1 v$ i_man_a [20] $end
$var wire 1 w$ i_man_a [19] $end
$var wire 1 x$ i_man_a [18] $end
$var wire 1 y$ i_man_a [17] $end
$var wire 1 z$ i_man_a [16] $end
$var wire 1 {$ i_man_a [15] $end
$var wire 1 |$ i_man_a [14] $end
$var wire 1 }$ i_man_a [13] $end
$var wire 1 ~$ i_man_a [12] $end
$var wire 1 !% i_man_a [11] $end
$var wire 1 "% i_man_a [10] $end
$var wire 1 #% i_man_a [9] $end
$var wire 1 $% i_man_a [8] $end
$var wire 1 %% i_man_a [7] $end
$var wire 1 &% i_man_a [6] $end
$var wire 1 '% i_man_a [5] $end
$var wire 1 (% i_man_a [4] $end
$var wire 1 )% i_man_a [3] $end
$var wire 1 *% i_man_a [2] $end
$var wire 1 +% i_man_a [1] $end
$var wire 1 ,% i_man_a [0] $end
$var wire 1 -% i_man_b [27] $end
$var wire 1 .% i_man_b [26] $end
$var wire 1 /% i_man_b [25] $end
$var wire 1 0% i_man_b [24] $end
$var wire 1 1% i_man_b [23] $end
$var wire 1 2% i_man_b [22] $end
$var wire 1 3% i_man_b [21] $end
$var wire 1 4% i_man_b [20] $end
$var wire 1 5% i_man_b [19] $end
$var wire 1 6% i_man_b [18] $end
$var wire 1 7% i_man_b [17] $end
$var wire 1 8% i_man_b [16] $end
$var wire 1 9% i_man_b [15] $end
$var wire 1 :% i_man_b [14] $end
$var wire 1 ;% i_man_b [13] $end
$var wire 1 <% i_man_b [12] $end
$var wire 1 =% i_man_b [11] $end
$var wire 1 >% i_man_b [10] $end
$var wire 1 ?% i_man_b [9] $end
$var wire 1 @% i_man_b [8] $end
$var wire 1 A% i_man_b [7] $end
$var wire 1 B% i_man_b [6] $end
$var wire 1 C% i_man_b [5] $end
$var wire 1 D% i_man_b [4] $end
$var wire 1 E% i_man_b [3] $end
$var wire 1 F% i_man_b [2] $end
$var wire 1 G% i_man_b [1] $end
$var wire 1 H% i_man_b [0] $end
$var wire 1 I% i_compare $end
$var reg 1 J% o_sign_max $end
$var reg 1 K% o_sign_min $end
$var reg 28 L% o_man_max [27:0] $end
$var reg 28 M% o_man_min [27:0] $end
$var reg 29 N% w_a [28:0] $end
$var reg 29 O% w_b [28:0] $end
$var reg 29 P% w_max [28:0] $end
$var reg 29 Q% w_min [28:0] $end
$upscope $end

$scope module MAN_ALU_UNIT $end
$var parameter 32 R% NUM_OP $end
$var parameter 32 S% SIZE_MAN $end
$var wire 1 ) i_fpu_op [0] $end
$var wire 1 T% i_sign_max $end
$var wire 1 U% i_sign_min $end
$var wire 1 V% i_man_max [27] $end
$var wire 1 W% i_man_max [26] $end
$var wire 1 X% i_man_max [25] $end
$var wire 1 Y% i_man_max [24] $end
$var wire 1 Z% i_man_max [23] $end
$var wire 1 [% i_man_max [22] $end
$var wire 1 \% i_man_max [21] $end
$var wire 1 ]% i_man_max [20] $end
$var wire 1 ^% i_man_max [19] $end
$var wire 1 _% i_man_max [18] $end
$var wire 1 `% i_man_max [17] $end
$var wire 1 a% i_man_max [16] $end
$var wire 1 b% i_man_max [15] $end
$var wire 1 c% i_man_max [14] $end
$var wire 1 d% i_man_max [13] $end
$var wire 1 e% i_man_max [12] $end
$var wire 1 f% i_man_max [11] $end
$var wire 1 g% i_man_max [10] $end
$var wire 1 h% i_man_max [9] $end
$var wire 1 i% i_man_max [8] $end
$var wire 1 j% i_man_max [7] $end
$var wire 1 k% i_man_max [6] $end
$var wire 1 l% i_man_max [5] $end
$var wire 1 m% i_man_max [4] $end
$var wire 1 n% i_man_max [3] $end
$var wire 1 o% i_man_max [2] $end
$var wire 1 p% i_man_max [1] $end
$var wire 1 q% i_man_max [0] $end
$var wire 1 r% i_man_min [27] $end
$var wire 1 s% i_man_min [26] $end
$var wire 1 t% i_man_min [25] $end
$var wire 1 u% i_man_min [24] $end
$var wire 1 v% i_man_min [23] $end
$var wire 1 w% i_man_min [22] $end
$var wire 1 x% i_man_min [21] $end
$var wire 1 y% i_man_min [20] $end
$var wire 1 z% i_man_min [19] $end
$var wire 1 {% i_man_min [18] $end
$var wire 1 |% i_man_min [17] $end
$var wire 1 }% i_man_min [16] $end
$var wire 1 ~% i_man_min [15] $end
$var wire 1 !& i_man_min [14] $end
$var wire 1 "& i_man_min [13] $end
$var wire 1 #& i_man_min [12] $end
$var wire 1 $& i_man_min [11] $end
$var wire 1 %& i_man_min [10] $end
$var wire 1 && i_man_min [9] $end
$var wire 1 '& i_man_min [8] $end
$var wire 1 (& i_man_min [7] $end
$var wire 1 )& i_man_min [6] $end
$var wire 1 *& i_man_min [5] $end
$var wire 1 +& i_man_min [4] $end
$var wire 1 ,& i_man_min [3] $end
$var wire 1 -& i_man_min [2] $end
$var wire 1 .& i_man_min [1] $end
$var wire 1 /& i_man_min [0] $end
$var reg 28 0& o_man_alu [27:0] $end
$var reg 1 1& o_overflow $end
$var reg 1 2& w_i_carry $end
$var reg 28 3& w_n_man_b [27:0] $end
$var reg 28 4& w_i_man_b [27:0] $end
$var reg 1 5& w_overflow $end

$scope module ALU_SUB_UNIT $end
$var wire 1 6& i_carry $end
$var wire 1 V% i_data_a [27] $end
$var wire 1 W% i_data_a [26] $end
$var wire 1 X% i_data_a [25] $end
$var wire 1 Y% i_data_a [24] $end
$var wire 1 Z% i_data_a [23] $end
$var wire 1 [% i_data_a [22] $end
$var wire 1 \% i_data_a [21] $end
$var wire 1 ]% i_data_a [20] $end
$var wire 1 ^% i_data_a [19] $end
$var wire 1 _% i_data_a [18] $end
$var wire 1 `% i_data_a [17] $end
$var wire 1 a% i_data_a [16] $end
$var wire 1 b% i_data_a [15] $end
$var wire 1 c% i_data_a [14] $end
$var wire 1 d% i_data_a [13] $end
$var wire 1 e% i_data_a [12] $end
$var wire 1 f% i_data_a [11] $end
$var wire 1 g% i_data_a [10] $end
$var wire 1 h% i_data_a [9] $end
$var wire 1 i% i_data_a [8] $end
$var wire 1 j% i_data_a [7] $end
$var wire 1 k% i_data_a [6] $end
$var wire 1 l% i_data_a [5] $end
$var wire 1 m% i_data_a [4] $end
$var wire 1 n% i_data_a [3] $end
$var wire 1 o% i_data_a [2] $end
$var wire 1 p% i_data_a [1] $end
$var wire 1 q% i_data_a [0] $end
$var wire 1 7& i_data_b [27] $end
$var wire 1 8& i_data_b [26] $end
$var wire 1 9& i_data_b [25] $end
$var wire 1 :& i_data_b [24] $end
$var wire 1 ;& i_data_b [23] $end
$var wire 1 <& i_data_b [22] $end
$var wire 1 =& i_data_b [21] $end
$var wire 1 >& i_data_b [20] $end
$var wire 1 ?& i_data_b [19] $end
$var wire 1 @& i_data_b [18] $end
$var wire 1 A& i_data_b [17] $end
$var wire 1 B& i_data_b [16] $end
$var wire 1 C& i_data_b [15] $end
$var wire 1 D& i_data_b [14] $end
$var wire 1 E& i_data_b [13] $end
$var wire 1 F& i_data_b [12] $end
$var wire 1 G& i_data_b [11] $end
$var wire 1 H& i_data_b [10] $end
$var wire 1 I& i_data_b [9] $end
$var wire 1 J& i_data_b [8] $end
$var wire 1 K& i_data_b [7] $end
$var wire 1 L& i_data_b [6] $end
$var wire 1 M& i_data_b [5] $end
$var wire 1 N& i_data_b [4] $end
$var wire 1 O& i_data_b [3] $end
$var wire 1 P& i_data_b [2] $end
$var wire 1 Q& i_data_b [1] $end
$var wire 1 R& i_data_b [0] $end
$var reg 28 S& o_sum [27:0] $end
$var reg 1 T& o_carry $end
$var reg 8 U& w_c [7:0] $end
$var reg 7 V& w_p [6:0] $end
$var reg 7 W& w_g [6:0] $end

$scope begin CLA_BLOCK_GEN[6] $end
$var parameter 32 X& i $end

$scope module CLA_4BIT_UNIT_1 $end
$var wire 1 V% a [3] $end
$var wire 1 W% a [2] $end
$var wire 1 X% a [1] $end
$var wire 1 Y% a [0] $end
$var wire 1 7& b [3] $end
$var wire 1 8& b [2] $end
$var wire 1 9& b [1] $end
$var wire 1 :& b [0] $end
$var wire 1 Y& cin $end
$var reg 4 Z& sum [3:0] $end
$var reg 1 [& o_p $end
$var reg 1 \& o_g $end
$var reg 4 ]& w_g [3:0] $end
$var reg 4 ^& w_p [3:0] $end
$var reg 4 _& w_c [3:0] $end
$upscope $end
$upscope $end

$scope begin CLA_BLOCK_GEN[5] $end
$var parameter 32 `& i $end

$scope module CLA_4BIT_UNIT_1 $end
$var wire 1 Z% a [3] $end
$var wire 1 [% a [2] $end
$var wire 1 \% a [1] $end
$var wire 1 ]% a [0] $end
$var wire 1 ;& b [3] $end
$var wire 1 <& b [2] $end
$var wire 1 =& b [1] $end
$var wire 1 >& b [0] $end
$var wire 1 a& cin $end
$var reg 4 b& sum [3:0] $end
$var reg 1 c& o_p $end
$var reg 1 d& o_g $end
$var reg 4 e& w_g [3:0] $end
$var reg 4 f& w_p [3:0] $end
$var reg 4 g& w_c [3:0] $end
$upscope $end
$upscope $end

$scope begin CLA_BLOCK_GEN[4] $end
$var parameter 32 h& i $end

$scope module CLA_4BIT_UNIT_1 $end
$var wire 1 ^% a [3] $end
$var wire 1 _% a [2] $end
$var wire 1 `% a [1] $end
$var wire 1 a% a [0] $end
$var wire 1 ?& b [3] $end
$var wire 1 @& b [2] $end
$var wire 1 A& b [1] $end
$var wire 1 B& b [0] $end
$var wire 1 i& cin $end
$var reg 4 j& sum [3:0] $end
$var reg 1 k& o_p $end
$var reg 1 l& o_g $end
$var reg 4 m& w_g [3:0] $end
$var reg 4 n& w_p [3:0] $end
$var reg 4 o& w_c [3:0] $end
$upscope $end
$upscope $end

$scope begin CLA_BLOCK_GEN[3] $end
$var parameter 32 p& i $end

$scope module CLA_4BIT_UNIT_1 $end
$var wire 1 b% a [3] $end
$var wire 1 c% a [2] $end
$var wire 1 d% a [1] $end
$var wire 1 e% a [0] $end
$var wire 1 C& b [3] $end
$var wire 1 D& b [2] $end
$var wire 1 E& b [1] $end
$var wire 1 F& b [0] $end
$var wire 1 q& cin $end
$var reg 4 r& sum [3:0] $end
$var reg 1 s& o_p $end
$var reg 1 t& o_g $end
$var reg 4 u& w_g [3:0] $end
$var reg 4 v& w_p [3:0] $end
$var reg 4 w& w_c [3:0] $end
$upscope $end
$upscope $end

$scope begin CLA_BLOCK_GEN[2] $end
$var parameter 32 x& i $end

$scope module CLA_4BIT_UNIT_1 $end
$var wire 1 f% a [3] $end
$var wire 1 g% a [2] $end
$var wire 1 h% a [1] $end
$var wire 1 i% a [0] $end
$var wire 1 G& b [3] $end
$var wire 1 H& b [2] $end
$var wire 1 I& b [1] $end
$var wire 1 J& b [0] $end
$var wire 1 y& cin $end
$var reg 4 z& sum [3:0] $end
$var reg 1 {& o_p $end
$var reg 1 |& o_g $end
$var reg 4 }& w_g [3:0] $end
$var reg 4 ~& w_p [3:0] $end
$var reg 4 !' w_c [3:0] $end
$upscope $end
$upscope $end

$scope begin CLA_BLOCK_GEN[1] $end
$var parameter 32 "' i $end

$scope module CLA_4BIT_UNIT_1 $end
$var wire 1 j% a [3] $end
$var wire 1 k% a [2] $end
$var wire 1 l% a [1] $end
$var wire 1 m% a [0] $end
$var wire 1 K& b [3] $end
$var wire 1 L& b [2] $end
$var wire 1 M& b [1] $end
$var wire 1 N& b [0] $end
$var wire 1 #' cin $end
$var reg 4 $' sum [3:0] $end
$var reg 1 %' o_p $end
$var reg 1 &' o_g $end
$var reg 4 '' w_g [3:0] $end
$var reg 4 (' w_p [3:0] $end
$var reg 4 )' w_c [3:0] $end
$upscope $end
$upscope $end

$scope module CLA_4BIT_UNIT_0 $end
$var wire 1 n% a [3] $end
$var wire 1 o% a [2] $end
$var wire 1 p% a [1] $end
$var wire 1 q% a [0] $end
$var wire 1 O& b [3] $end
$var wire 1 P& b [2] $end
$var wire 1 Q& b [1] $end
$var wire 1 R& b [0] $end
$var wire 1 *' cin $end
$var reg 4 +' sum [3:0] $end
$var reg 1 ,' o_p $end
$var reg 1 -' o_g $end
$var reg 4 .' w_g [3:0] $end
$var reg 4 /' w_p [3:0] $end
$var reg 4 0' w_c [3:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module LOPD_24BIT_UNIT $end
$var parameter 32 1' SIZE_DATA $end
$var parameter 32 2' SIZE_LOPD $end
$var wire 1 3' i_data [23] $end
$var wire 1 4' i_data [22] $end
$var wire 1 5' i_data [21] $end
$var wire 1 6' i_data [20] $end
$var wire 1 7' i_data [19] $end
$var wire 1 8' i_data [18] $end
$var wire 1 9' i_data [17] $end
$var wire 1 :' i_data [16] $end
$var wire 1 ;' i_data [15] $end
$var wire 1 <' i_data [14] $end
$var wire 1 =' i_data [13] $end
$var wire 1 >' i_data [12] $end
$var wire 1 ?' i_data [11] $end
$var wire 1 @' i_data [10] $end
$var wire 1 A' i_data [9] $end
$var wire 1 B' i_data [8] $end
$var wire 1 C' i_data [7] $end
$var wire 1 D' i_data [6] $end
$var wire 1 E' i_data [5] $end
$var wire 1 F' i_data [4] $end
$var wire 1 G' i_data [3] $end
$var wire 1 H' i_data [2] $end
$var wire 1 I' i_data [1] $end
$var wire 1 J' i_data [0] $end
$var reg 5 K' o_one_position [4:0] $end
$var reg 1 L' o_zero_flag $end
$var reg 16 M' LOPD16_i_data [15:0] $end
$var reg 4 N' LOPD16_o_pos_one [3:0] $end
$var reg 1 O' LOPD16_o_zero_flag $end
$var reg 8 P' LOPD8_i_data [7:0] $end
$var reg 3 Q' LOPD8_o_pos_one [2:0] $end
$var reg 1 R' LOPD8_o_zero_flag $end
$var reg 5 S' w_o_one_position [4:0] $end
$var reg 8 T' w_sub [7:0] $end

$scope module LOPD_16bit_UNIT_LSB $end
$var wire 1 U' i_data [15] $end
$var wire 1 V' i_data [14] $end
$var wire 1 W' i_data [13] $end
$var wire 1 X' i_data [12] $end
$var wire 1 Y' i_data [11] $end
$var wire 1 Z' i_data [10] $end
$var wire 1 [' i_data [9] $end
$var wire 1 \' i_data [8] $end
$var wire 1 ]' i_data [7] $end
$var wire 1 ^' i_data [6] $end
$var wire 1 _' i_data [5] $end
$var wire 1 `' i_data [4] $end
$var wire 1 a' i_data [3] $end
$var wire 1 b' i_data [2] $end
$var wire 1 c' i_data [1] $end
$var wire 1 d' i_data [0] $end
$var reg 4 e' o_pos_one [3:0] $end
$var reg 1 f' o_zero_flag $end
$var reg 3 g' w_pos_one_0 [2:0] $end
$var reg 1 h' w_zero_flag_0 $end
$var reg 3 i' w_pos_one_1 [2:0] $end
$var reg 1 j' w_zero_flag_1 $end

$scope module LOPD_8bit_unit_0 $end
$var wire 1 ]' i_data [7] $end
$var wire 1 ^' i_data [6] $end
$var wire 1 _' i_data [5] $end
$var wire 1 `' i_data [4] $end
$var wire 1 a' i_data [3] $end
$var wire 1 b' i_data [2] $end
$var wire 1 c' i_data [1] $end
$var wire 1 d' i_data [0] $end
$var reg 3 k' o_pos_one [2:0] $end
$var reg 1 l' o_zero_flag $end
$var reg 1 m' w_zero_flag_0 $end
$var reg 2 n' w_pos_one_0 [1:0] $end
$var reg 1 o' w_zero_flag_1 $end
$var reg 2 p' w_pos_one_1 [1:0] $end

$scope module LOPD_4bit_unit_0 $end
$var wire 1 a' i_data [3] $end
$var wire 1 b' i_data [2] $end
$var wire 1 c' i_data [1] $end
$var wire 1 d' i_data [0] $end
$var reg 2 q' o_pos_one [1:0] $end
$var reg 1 r' o_zero_flag $end
$upscope $end

$scope module LOPD_4bit_unit_1 $end
$var wire 1 ]' i_data [3] $end
$var wire 1 ^' i_data [2] $end
$var wire 1 _' i_data [1] $end
$var wire 1 `' i_data [0] $end
$var reg 2 s' o_pos_one [1:0] $end
$var reg 1 t' o_zero_flag $end
$upscope $end
$upscope $end

$scope module LOPD_8bit_unit_1 $end
$var wire 1 U' i_data [7] $end
$var wire 1 V' i_data [6] $end
$var wire 1 W' i_data [5] $end
$var wire 1 X' i_data [4] $end
$var wire 1 Y' i_data [3] $end
$var wire 1 Z' i_data [2] $end
$var wire 1 [' i_data [1] $end
$var wire 1 \' i_data [0] $end
$var reg 3 u' o_pos_one [2:0] $end
$var reg 1 v' o_zero_flag $end
$var reg 1 w' w_zero_flag_0 $end
$var reg 2 x' w_pos_one_0 [1:0] $end
$var reg 1 y' w_zero_flag_1 $end
$var reg 2 z' w_pos_one_1 [1:0] $end

$scope module LOPD_4bit_unit_0 $end
$var wire 1 Y' i_data [3] $end
$var wire 1 Z' i_data [2] $end
$var wire 1 [' i_data [1] $end
$var wire 1 \' i_data [0] $end
$var reg 2 {' o_pos_one [1:0] $end
$var reg 1 |' o_zero_flag $end
$upscope $end

$scope module LOPD_4bit_unit_1 $end
$var wire 1 U' i_data [3] $end
$var wire 1 V' i_data [2] $end
$var wire 1 W' i_data [1] $end
$var wire 1 X' i_data [0] $end
$var reg 2 }' o_pos_one [1:0] $end
$var reg 1 ~' o_zero_flag $end
$upscope $end
$upscope $end
$upscope $end

$scope module LOPD_8bit_UNIT_MSB $end
$var wire 1 !( i_data [7] $end
$var wire 1 "( i_data [6] $end
$var wire 1 #( i_data [5] $end
$var wire 1 $( i_data [4] $end
$var wire 1 %( i_data [3] $end
$var wire 1 &( i_data [2] $end
$var wire 1 '( i_data [1] $end
$var wire 1 (( i_data [0] $end
$var reg 3 )( o_pos_one [2:0] $end
$var reg 1 *( o_zero_flag $end
$var reg 1 +( w_zero_flag_0 $end
$var reg 2 ,( w_pos_one_0 [1:0] $end
$var reg 1 -( w_zero_flag_1 $end
$var reg 2 .( w_pos_one_1 [1:0] $end

$scope module LOPD_4bit_unit_0 $end
$var wire 1 %( i_data [3] $end
$var wire 1 &( i_data [2] $end
$var wire 1 '( i_data [1] $end
$var wire 1 (( i_data [0] $end
$var reg 2 /( o_pos_one [1:0] $end
$var reg 1 0( o_zero_flag $end
$upscope $end

$scope module LOPD_4bit_unit_1 $end
$var wire 1 !( i_data [3] $end
$var wire 1 "( i_data [2] $end
$var wire 1 #( i_data [1] $end
$var wire 1 $( i_data [0] $end
$var reg 2 1( o_pos_one [1:0] $end
$var reg 1 2( o_zero_flag $end
$upscope $end
$upscope $end

$scope module LOPD_SUB $end
$var wire 1 3( i_carry $end
$var wire 1 4( i_data_a [7] $end
$var wire 1 5( i_data_a [6] $end
$var wire 1 6( i_data_a [5] $end
$var wire 1 7( i_data_a [4] $end
$var wire 1 8( i_data_a [3] $end
$var wire 1 9( i_data_a [2] $end
$var wire 1 :( i_data_a [1] $end
$var wire 1 ;( i_data_a [0] $end
$var wire 1 <( i_data_b [7] $end
$var wire 1 =( i_data_b [6] $end
$var wire 1 >( i_data_b [5] $end
$var wire 1 ?( i_data_b [4] $end
$var wire 1 @( i_data_b [3] $end
$var wire 1 A( i_data_b [2] $end
$var wire 1 B( i_data_b [1] $end
$var wire 1 C( i_data_b [0] $end
$var reg 8 D( o_sum [7:0] $end
$var reg 1 E( o_carry $end
$var reg 2 F( w_P [1:0] $end
$var reg 2 G( w_G [1:0] $end
$var reg 1 H( w_C $end

$scope module CLA_4BIT_UNIT_0 $end
$var wire 1 8( a [3] $end
$var wire 1 9( a [2] $end
$var wire 1 :( a [1] $end
$var wire 1 ;( a [0] $end
$var wire 1 @( b [3] $end
$var wire 1 A( b [2] $end
$var wire 1 B( b [1] $end
$var wire 1 C( b [0] $end
$var wire 1 3( cin $end
$var reg 4 I( sum [3:0] $end
$var reg 1 J( o_p $end
$var reg 1 K( o_g $end
$var reg 4 L( w_g [3:0] $end
$var reg 4 M( w_p [3:0] $end
$var reg 4 N( w_c [3:0] $end
$upscope $end

$scope module CLA_4BIT_UNIT_1 $end
$var wire 1 4( a [3] $end
$var wire 1 5( a [2] $end
$var wire 1 6( a [1] $end
$var wire 1 7( a [0] $end
$var wire 1 <( b [3] $end
$var wire 1 =( b [2] $end
$var wire 1 >( b [1] $end
$var wire 1 ?( b [0] $end
$var wire 1 O( cin $end
$var reg 4 P( sum [3:0] $end
$var reg 1 Q( o_p $end
$var reg 1 R( o_g $end
$var reg 4 S( w_g [3:0] $end
$var reg 4 T( w_p [3:0] $end
$var reg 4 U( w_c [3:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module EXP_ADJUST_UNIT $end
$var parameter 32 V( SIZE_EXP $end
$var parameter 32 W( SIZE_LOPD $end
$var wire 1 X( i_overflow $end
$var wire 1 Y( i_underflow $end
$var wire 1 Z( i_zero_flag $end
$var wire 1 [( i_lopd_value [7] $end
$var wire 1 \( i_lopd_value [6] $end
$var wire 1 ]( i_lopd_value [5] $end
$var wire 1 ^( i_lopd_value [4] $end
$var wire 1 _( i_lopd_value [3] $end
$var wire 1 `( i_lopd_value [2] $end
$var wire 1 a( i_lopd_value [1] $end
$var wire 1 b( i_lopd_value [0] $end
$var wire 1 c( i_exp_value [7] $end
$var wire 1 d( i_exp_value [6] $end
$var wire 1 e( i_exp_value [5] $end
$var wire 1 f( i_exp_value [4] $end
$var wire 1 g( i_exp_value [3] $end
$var wire 1 h( i_exp_value [2] $end
$var wire 1 i( i_exp_value [1] $end
$var wire 1 j( i_exp_value [0] $end
$var reg 8 k( o_exp_result [7:0] $end
$var reg 8 l( w_exp_result [7:0] $end
$var reg 1 m( w_i_carry $end
$var reg 8 n( w_data_b [7:0] $end

$scope module CLA_8BIT_UNIT $end
$var wire 1 o( i_carry $end
$var wire 1 c( i_data_a [7] $end
$var wire 1 d( i_data_a [6] $end
$var wire 1 e( i_data_a [5] $end
$var wire 1 f( i_data_a [4] $end
$var wire 1 g( i_data_a [3] $end
$var wire 1 h( i_data_a [2] $end
$var wire 1 i( i_data_a [1] $end
$var wire 1 j( i_data_a [0] $end
$var wire 1 p( i_data_b [7] $end
$var wire 1 q( i_data_b [6] $end
$var wire 1 r( i_data_b [5] $end
$var wire 1 s( i_data_b [4] $end
$var wire 1 t( i_data_b [3] $end
$var wire 1 u( i_data_b [2] $end
$var wire 1 v( i_data_b [1] $end
$var wire 1 w( i_data_b [0] $end
$var reg 8 x( o_sum [7:0] $end
$var reg 1 y( o_carry $end
$var reg 2 z( w_P [1:0] $end
$var reg 2 {( w_G [1:0] $end
$var reg 1 |( w_C $end

$scope module CLA_4BIT_UNIT_0 $end
$var wire 1 g( a [3] $end
$var wire 1 h( a [2] $end
$var wire 1 i( a [1] $end
$var wire 1 j( a [0] $end
$var wire 1 t( b [3] $end
$var wire 1 u( b [2] $end
$var wire 1 v( b [1] $end
$var wire 1 w( b [0] $end
$var wire 1 o( cin $end
$var reg 4 }( sum [3:0] $end
$var reg 1 ~( o_p $end
$var reg 1 !) o_g $end
$var reg 4 ") w_g [3:0] $end
$var reg 4 #) w_p [3:0] $end
$var reg 4 $) w_c [3:0] $end
$upscope $end

$scope module CLA_4BIT_UNIT_1 $end
$var wire 1 c( a [3] $end
$var wire 1 d( a [2] $end
$var wire 1 e( a [1] $end
$var wire 1 f( a [0] $end
$var wire 1 p( b [3] $end
$var wire 1 q( b [2] $end
$var wire 1 r( b [1] $end
$var wire 1 s( b [0] $end
$var wire 1 %) cin $end
$var reg 4 &) sum [3:0] $end
$var reg 1 ') o_p $end
$var reg 1 () o_g $end
$var reg 4 )) w_g [3:0] $end
$var reg 4 *) w_p [3:0] $end
$var reg 4 +) w_c [3:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module NORMALIZATION_UNIT $end
$var parameter 32 ,) SIZE_LOPD $end
$var parameter 32 -) SIZE_DATA $end
$var wire 1 .) i_overflow $end
$var wire 1 /) i_zero_flag $end
$var wire 1 0) i_one_position [4] $end
$var wire 1 1) i_one_position [3] $end
$var wire 1 2) i_one_position [2] $end
$var wire 1 3) i_one_position [1] $end
$var wire 1 4) i_one_position [0] $end
$var wire 1 5) i_mantissa [27] $end
$var wire 1 6) i_mantissa [26] $end
$var wire 1 7) i_mantissa [25] $end
$var wire 1 8) i_mantissa [24] $end
$var wire 1 9) i_mantissa [23] $end
$var wire 1 :) i_mantissa [22] $end
$var wire 1 ;) i_mantissa [21] $end
$var wire 1 <) i_mantissa [20] $end
$var wire 1 =) i_mantissa [19] $end
$var wire 1 >) i_mantissa [18] $end
$var wire 1 ?) i_mantissa [17] $end
$var wire 1 @) i_mantissa [16] $end
$var wire 1 A) i_mantissa [15] $end
$var wire 1 B) i_mantissa [14] $end
$var wire 1 C) i_mantissa [13] $end
$var wire 1 D) i_mantissa [12] $end
$var wire 1 E) i_mantissa [11] $end
$var wire 1 F) i_mantissa [10] $end
$var wire 1 G) i_mantissa [9] $end
$var wire 1 H) i_mantissa [8] $end
$var wire 1 I) i_mantissa [7] $end
$var wire 1 J) i_mantissa [6] $end
$var wire 1 K) i_mantissa [5] $end
$var wire 1 L) i_mantissa [4] $end
$var wire 1 M) i_mantissa [3] $end
$var wire 1 N) i_mantissa [2] $end
$var wire 1 O) i_mantissa [1] $end
$var wire 1 P) i_mantissa [0] $end
$var reg 28 Q) o_mantissa [27:0] $end
$var reg 28 R) w_shift_left [27:0] $end

$scope module SHF_left_28bit_unit $end
$var parameter 32 S) SIZE_DATA $end
$var parameter 32 T) SIZE_SHIFT $end
$var wire 1 0) i_shift_number [4] $end
$var wire 1 1) i_shift_number [3] $end
$var wire 1 2) i_shift_number [2] $end
$var wire 1 3) i_shift_number [1] $end
$var wire 1 4) i_shift_number [0] $end
$var wire 1 5) i_data [27] $end
$var wire 1 6) i_data [26] $end
$var wire 1 7) i_data [25] $end
$var wire 1 8) i_data [24] $end
$var wire 1 9) i_data [23] $end
$var wire 1 :) i_data [22] $end
$var wire 1 ;) i_data [21] $end
$var wire 1 <) i_data [20] $end
$var wire 1 =) i_data [19] $end
$var wire 1 >) i_data [18] $end
$var wire 1 ?) i_data [17] $end
$var wire 1 @) i_data [16] $end
$var wire 1 A) i_data [15] $end
$var wire 1 B) i_data [14] $end
$var wire 1 C) i_data [13] $end
$var wire 1 D) i_data [12] $end
$var wire 1 E) i_data [11] $end
$var wire 1 F) i_data [10] $end
$var wire 1 G) i_data [9] $end
$var wire 1 H) i_data [8] $end
$var wire 1 I) i_data [7] $end
$var wire 1 J) i_data [6] $end
$var wire 1 K) i_data [5] $end
$var wire 1 L) i_data [4] $end
$var wire 1 M) i_data [3] $end
$var wire 1 N) i_data [2] $end
$var wire 1 O) i_data [1] $end
$var wire 1 P) i_data [0] $end
$var reg 28 U) o_data [27:0] $end

$scope begin GEN_SHIFT[4] $end
$var parameter 32 V) i $end
$var parameter 32 W) SHIFT_AMT $end
$upscope $end

$scope begin GEN_SHIFT[3] $end
$var parameter 32 X) i $end
$var parameter 32 Y) SHIFT_AMT $end
$upscope $end

$scope begin GEN_SHIFT[2] $end
$var parameter 32 Z) i $end
$var parameter 32 [) SHIFT_AMT $end
$upscope $end

$scope begin GEN_SHIFT[1] $end
$var parameter 32 \) i $end
$var parameter 32 ]) SHIFT_AMT $end
$upscope $end

$scope begin GEN_SHIFT[0] $end
$var parameter 32 ^) i $end
$var parameter 32 _) SHIFT_AMT $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0"
0#
b0 $
b0 %
b0 &
b0 '
b0 j
0k
0l
b0 m
b0 n
b100000000000000000000000 o
b100000000000000000000000 p
0q
b0 r
b0 s
0t
b0 u
b0 v
b0 w
0x
0y
b100000000000000000000000 z
b100000000000000000000000 {
b1000000000000000000000000000 |
b1000000000000000000000000000 }
0~
0!!
0"!
0#!
b1000000000000000000000000000 $!
b1000000000000000000000000000 %!
b0 &!
1'!
b10111 (!
1)!
b0 *!
b0 +!
0=!
b0 >!
b0 ?!
0A!
0B!
1C!
0D!
1E!
0F!
1G!
0H!
1I!
0J!
1K!
0L!
1M!
0N!
1O!
0P!
1Q!
0R!
1S!
0T!
1U!
0V!
1W!
0X!
1Y!
b0 k!
b11111111 l!
b0 v!
1w!
b11 x!
b0 y!
1z!
b0 {!
1|!
0}!
b0 ~!
b1111 !"
b1111 ""
b0 $"
1%"
0&"
b0 '"
b1111 ("
b1111 )"
0^"
0_"
b100000000000000000000000 `"
b100000000000000000000000 a"
b100000000000000000000000 b"
b100000000000000000000000 c"
b100000000000000000000000 d"
b100000000000000000000000 e"
b1000000000000000000000000000 +#
0p#
1q#
b0 r#
b1111111 s#
b0 t#
b11111111 u#
0b$
1c$
0d$
1e$
0f$
1g$
0h$
1i$
0j$
1k$
0W$
1X$
0Y$
1Z$
0[$
1\$
0]$
1^$
0_$
1`$
0L$
1M$
0N$
1O$
0P$
1Q$
0R$
1S$
0T$
1U$
0A$
1B$
0C$
1D$
0E$
1F$
0G$
1H$
0I$
1J$
06$
17$
08$
19$
0:$
1;$
0<$
1=$
0>$
1?$
0+$
1,$
0-$
1.$
0/$
10$
01$
12$
03$
14$
0~#
1!$
0"$
1#$
0$$
1%$
0&$
1'$
0($
1)$
0J%
0K%
b1000000000000000000000000000 L%
b1000000000000000000000000000 M%
b1000000000000000000000000000 N%
b1000000000000000000000000000 O%
b1000000000000000000000000000 P%
b1000000000000000000000000000 Q%
b0 0&
11&
02&
b111111111111111111111111111 3&
b1000000000000000000000000000 4&
15&
b0 S&
1T&
b10000000 U&
b0 V&
b1000000 W&
b0 +'
0,'
0-'
b0 .'
b0 /'
b0 0'
b0 $'
0%'
0&'
b0 ''
b0 ('
b0 )'
b0 z&
0{&
0|&
b0 }&
b0 ~&
b0 !'
b0 r&
0s&
0t&
b0 u&
b0 v&
b0 w&
b0 j&
0k&
0l&
b0 m&
b0 n&
b0 o&
b0 b&
0c&
0d&
b0 e&
b0 f&
b0 g&
b0 Z&
0[&
1\&
b1000 ]&
b0 ^&
b0 _&
b10111 K'
1L'
b0 M'
b0 N'
1O'
b0 P'
b0 Q'
1R'
b0 e'
1f'
b0 g'
1h'
b0 k'
1l'
1m'
b0 n'
b0 q'
1r'
1o'
b0 p'
b0 s'
1t'
b0 i'
1j'
b0 u'
1v'
1w'
b0 x'
b0 {'
1|'
1y'
b0 z'
b0 }'
1~'
b0 )(
1*(
1+(
b0 ,(
b0 /(
10(
1-(
b0 .(
b0 1(
12(
b0 S'
b10111 T'
b10111 D(
1E(
b0 F(
b11 G(
1H(
b111 I(
0J(
1K(
b111 L(
b1000 M(
b1111 N(
b1 P(
0Q(
1R(
b1 S(
b1110 T(
b1111 U(
b0 k(
b1 l(
0m(
b1 n(
b1 x(
0y(
b0 z(
b0 {(
0|(
b1 }(
0~(
0!)
b0 ")
b1 #)
b0 $)
b0 &)
0')
0()
b0 ))
b0 *)
b0 +)
b0 Q)
b0 R)
b0 U)
b1 !
b1 (
b1000 ,!
b1000 @!
b1000 Z!
b11000 *"
b11100 f"
b101 g"
b0 4#
b1 5#
b1 2#
b10 3#
b10 0#
b100 1#
b11 .#
b1000 /#
b100 ,#
b10000 -#
b11100 6#
b111 7#
b0 a$
b1 V$
b10 K$
b11 @$
b100 5$
b101 *$
b110 }#
b110 |#
b101 {#
b100 z#
b11 y#
b10 x#
b1 w#
b0 v#
b11100 l$
b1 R%
b11100 S%
b1 "'
b10 x&
b11 p&
b100 h&
b101 `&
b110 X&
b11000 1'
b101 2'
b1000 V(
b1000 W(
b101 ,)
b11100 -)
b11100 S)
b101 T)
b0 ^)
b1 _)
b1 \)
b10 ])
b10 Z)
b100 [)
b11 X)
b1000 Y)
b100 V)
b10000 W)
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
14)
13)
12)
01)
10)
1/)
1.)
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0](
0\(
0[(
1b(
1a(
1`(
0_(
1^(
1Z(
0Y(
1X(
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
1r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
1V%
0U%
0T%
0I%
0H%
0G%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
1-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
1o$
0n$
0m$
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
1T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
18#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
1m"
0*#
0)#
0(#
0'#
0l"
0k"
0j"
0i"
0h"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
1E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
1-"
0,"
0+"
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
1u!
1t!
1s!
1r!
1q!
1p!
1o!
1n!
1m!
1#"
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
17&
06&
0*'
0#'
0y&
0q&
0i&
0a&
0Y&
1C(
1B(
1A(
1@(
1?(
1>(
1=(
1<(
1;(
1:(
19(
08(
17(
06(
05(
04(
13(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
1O(
1w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
0%)
$end
#5000
1"
#10000
0"
#15000
1"
#20000
1#
0"
#25000
1"
b1000000101100000000000000000000 %
b1000000000011001100110011001101 &
1i
1g
1f
1c
1b
1_
1^
1[
1Z
1W
1V
1K
15
14
12
1+
b10000001 m
b101100000000000000000000 o
b10000000 n
b100011001100110011001101 p
1\"
1Z"
1Y"
1V"
1U"
1R"
1Q"
1N"
1M"
1J"
1I"
10"
1/"
b101100000000000000000000 b"
b100011001100110011001101 c"
b101100000000000000000000 d"
b100011001100110011001101 e"
b100011001100110011001101 a"
b101100000000000000000000 `"
b101100000000000000000000 z
b100011001100110011001101 {
b1011000000000000000000000000 }
1&#
1$#
1##
1~"
1}"
1z"
1y"
1v"
1u"
1r"
1q"
1r$
1q$
1W#
1V#
0'$
1&$
b1011000000000000000000000000 N%
b1011000000000000000000000000 P%
1"$
0#$
0!$
1~#
b1011000000000000000000000000 L%
b1011000000000000000000000000 $!
b1000000 r#
b111111 s#
b10111111 u#
b1000000 t#
1Y%
1X%
b11 ^&
b1100000 t#
b10011111 u#
b10001111 u#
b1110000 t#
b11 Z&
b11000000000000000000000000 S&
b1111000 t#
b10000111 u#
b10000011 u#
b1111100 t#
b11000000000000000000000000 0&
b11000000000000000000000000 &!
b1111110 t#
b10000001 u#
b10000000 u#
b1111111 t#
18)
17)
16'
15'
b110000 P'
1p#
0q#
1~
1$(
1#(
b1 1(
02(
1!!
0-(
b1 .(
1I%
b1000000000000000000000000000 P%
b1011000000000000000000000000 Q%
b1 )(
b101 )(
0*(
0R'
b101 Q'
b1011000000000000000000000000 M%
b1000000000000000000000000000 L%
b1000000000000000000000000000 $!
b1011000000000000000000000000 %!
b100 S'
b101 S'
b10101 S'
0L'
0)!
0C(
0A(
0?(
1u%
1t%
0Y%
0X%
b10 L(
b1101 M(
b0 S(
b1111 T(
b100111111111111111111111111 3&
b1011000000000000000000000000 4&
b0 ^&
0Z(
0/)
b1001100000000000000000000000 Q)
b1 k(
b0 Z&
b0 P(
1Q(
0R(
b10 I(
1:&
19&
b11 ^&
b10010 D(
b1 G(
b10 F(
b10 D(
b0 S&
b1 *!
b1001100000000000000000000000 +!
b100110000000000000000000 s
b1 r
b0 0&
b10 T'
b11 Z&
b11000000000000000000000000 S&
b10 K'
b0 &!
b100110000000000000000000 j
b100110000000000000000000 '
b10 (!
b11000000000000000000000000 0&
08)
07)
06'
05'
b0 P'
b1000000000000000000000000000 Q)
b11000000000000000000000000 &!
0b(
0`(
0^(
b1000000000000000000000000000 +!
18)
17)
16'
15'
0$(
0#(
12(
b0 1(
b110000 P'
b1001100000000000000000000000 Q)
b100000000000000000000000 s
b100000000000000000000000 j
b1001100000000000000000000000 +!
b0 .(
1-(
1$(
1#(
b1 1(
02(
b1 )(
1*(
b0 )(
b100110000000000000000000 s
b100000000000000000000000 '
b100110000000000000000000 j
1R'
b0 Q'
0-(
b1 .(
b1 )(
b101 )(
0*(
b101 S'
b1 S'
b0 S'
1L'
b100110000000000000000000 '
1)!
0R'
b101 Q'
1C(
1A(
1?(
b111 L(
b1000 M(
b1 S(
b1110 T(
b100 S'
b101 S'
b10101 S'
0L'
1Z(
1/)
b0 Q)
b0 k(
0)!
b1 P(
0Q(
1R(
b111 I(
0C(
0A(
0?(
b10 L(
b1101 M(
b0 S(
b1111 T(
b111 D(
b11 G(
b0 F(
b10111 D(
b0 *!
b0 +!
0Z(
0/)
b1001100000000000000000000000 Q)
b1 k(
b0 s
b0 r
b10111 T'
b0 P(
1Q(
0R(
b10 I(
b10010 D(
b1 G(
b10 F(
b10 D(
b10111 K'
b0 j
b1 *!
b1001100000000000000000000000 +!
b100110000000000000000000 s
b1 r
b0 '
b10111 (!
b10 T'
b10 K'
b100110000000000000000000 j
1b(
1`(
1^(
b100110000000000000000000 '
b10 (!
0b(
0`(
0^(
04)
02)
00)
15!
14!
1-!
0M!
0I!
0G!
0C!
b10000001 ?!
b10000000 >!
b10000000 v
b10000001 u
1j(
1c(
1b!
1[!
1c!
b1 ")
b0 #)
b1000 *)
b1 ~!
b1110 !"
b1000 '"
b111 ("
b1111111 l!
b1000 $"
0%"
1&"
b1 {!
0|!
1}!
b1000 &)
b0 }(
0n!
b0 '"
b1111 ("
b0 x(
b10000000 x(
b1 y!
b10 x!
b1 v!
b11 y!
b0 x!
b10000001 v!
b10000001 k!
b10000000 l(
b0 $"
1%"
0&"
b1 y!
b10 x!
b1 v!
b10000000 k(
b10000001 w
b10000000 *!
b1 k!
b1 w
b10000000 r
b1000000000110000000000000000000 j
b1000000000110000000000000000000 '
1l"
b10 $)
b10 }(
b10000010 x(
b10000010 l(
b10000010 k(
b10000010 *!
b10000010 r
b1000001000110000000000000000000 j
b1000001000110000000000000000000 '
b100011001100110011001101000 +#
b1100000000000000000000000000 U)
b1100000000000000000000000000 R)
b100011001100110011001101000 |
1E%
1C%
1B%
1?%
1>%
1;%
1:%
17%
16%
13%
12%
1.%
0-%
1P#
1N#
1M#
1J#
1I#
1F#
1E#
1B#
1A#
1>#
1=#
19#
08#
1($
0)$
04$
02$
0?$
0=$
0J$
0H$
0U$
0S$
0`$
0^$
0k$
b100011001100110011001101000 O%
b100011001100110011001101000 P%
0g$
0Z$
0\$
0O$
0Q$
0D$
0F$
09$
0;$
0.$
00$
0%$
1$$
0,$
07$
0B$
0M$
0X$
0c$
b100011001100110011001101000 L%
b100011001100110011001101000 $!
b111110 s#
b111100 s#
b111000 s#
b110000 s#
b100000 s#
b0 s#
b1011111 t#
b1001111 t#
b1000111 t#
b1000011 t#
b1000001 t#
b1000000 t#
1n%
1l%
1k%
1h%
1g%
1d%
1c%
1`%
1_%
1\%
1[%
1W%
0V%
b1000 /'
b110 ('
b110 ~&
b110 v&
b110 n&
b110 f&
b0 ]&
b1111 ^&
0p#
0~
b1111 Z&
1[&
0\&
b110 b&
b110 j&
b110 r&
b110 z&
b110 $'
b1000 +'
b11000000000000000000001000 S&
b11000000000000000001101000 S&
b11000000000000011001101000 S&
b11000000000110011001101000 S&
b11000001100110011001101000 S&
b11011001100110011001101000 S&
b0 W&
b1000000 V&
b1111011001100110011001101000 S&
0!!
b0 U&
b1111011001100110011001101000 0&
0I%
b1011000000000000000000000000 P%
b100011001100110011001101000 Q%
b1111011001100110011001101000 &!
0T&
1Y(
05&
b100011001100110011001101000 M%
b1011000000000000000000000000 L%
1M)
1K)
1J)
1G)
1F)
1C)
1B)
1?)
1>)
1;)
1:)
16)
15)
1I'
1H'
1E'
1D'
1A'
1@'
1='
1<'
19'
18'
14'
13'
b11110110 P'
b110011001100110 M'
b1111101100110011001100110100 Q)
b1011000000000000000000000000 $!
b100011001100110011001101000 %!
01&
0'!
b1111101100110011001100110100 +!
1,&
1*&
1)&
1&&
1%&
1"&
1!&
1|%
1{%
1x%
1w%
0u%
0t%
1s%
0r%
0n%
0l%
0k%
0h%
0g%
0d%
0c%
0`%
0_%
0\%
0[%
1Y%
1X%
0W%
1V%
1c'
1b'
1_'
1^'
1['
1Z'
1W'
1V'
1'(
1&(
1"(
1!(
b1011100110011001100110010111 3&
b100011001100110011001101000 4&
b0 /'
b0 ('
b0 ~&
b0 v&
b0 n&
b0 f&
b1011 ]&
b0 ^&
b11 1(
b10 /(
00(
b10 }'
0~'
b10 {'
0|'
b10 s'
0t'
b10 q'
0r'
b111110110011001100110011 s
0X(
0.)
b1111011001100110011001101000 Q)
b0 n(
b1000001011110110011001100110011 j
0m'
b10 n'
0o'
b10 p'
0w'
b10 x'
0y'
b10 z'
0+(
b10 ,(
b11 .(
b0 Z&
0[&
1\&
b0 b&
b0 j&
b0 r&
b0 z&
b0 $'
b0 +'
1O&
1M&
1L&
1I&
1H&
1E&
1D&
1A&
1@&
1=&
1<&
0:&
09&
18&
07&
b1000 /'
b110 ('
b110 ~&
b110 v&
b110 n&
b110 f&
b0 ]&
b1111 ^&
b1111011001100110011001100000 S&
b1111011001100110011000000000 S&
b1111011001100110000000000000 S&
b1111011001100000000000000000 S&
b1111011000000000000000000000 S&
b1111000000000000000000000000 S&
b1000000 W&
b0 V&
b0 S&
b111 )(
b100 u'
b110 u'
0v'
b100 k'
b110 k'
0l'
b1000001011110110011001100110011 '
b1111011001100110011001101000 +!
0w(
b0 ")
b1 #)
b111101100110011001100110 s
0h'
b110 g'
0j'
b110 i'
b111 Q'
b10000000 U&
b0 0&
b1111 Z&
1[&
0\&
b110 b&
b110 j&
b110 r&
b110 z&
b110 $'
b1000 +'
b1000 S&
b1101000 S&
b11001101000 S&
b110011001101000 S&
b1100110011001101000 S&
b11001100110011001101000 S&
b0 W&
b1000000 V&
b1111011001100110011001101000 S&
b0 &!
1T&
b10111 S'
b1000 e'
b1100 e'
b1110 e'
0f'
b1000001011101100110011001100110 j
b11 }(
0Y(
b11111101 n(
1m(
b10000011 x(
b1000001011101100110011001100110 '
0O'
b1110 N'
15&
b0 U&
b1111011001100110011001101000 0&
0B(
0M)
0K)
0J)
0G)
0F)
0C)
0B)
0?)
0>)
0;)
0:)
08)
07)
06)
05)
0I'
0H'
0E'
0D'
0A'
0@'
0='
0<'
09'
08'
06'
05'
04'
03'
b0 L(
b1111 M(
b0 P'
b0 M'
b1100000000000000000000000000 Q)
b1111011001100110011001101000 &!
0T&
11&
b10000011 l(
1w(
1u(
1t(
1s(
1r(
1q(
1p(
1Y(
b1 ")
b1100 #)
b1000 ))
b111 *)
b0 n(
0m(
b10000011 k(
1'!
05&
b1100000000000000000000000000 +!
b0 I(
1J(
0K(
1M)
1K)
1J)
1G)
1F)
1C)
1B)
1?)
1>)
1;)
1:)
18)
17)
16)
15)
1I'
1H'
1E'
1D'
1A'
1@'
1='
1<'
19'
18'
16'
15'
14'
13'
0c'
0b'
0_'
0^'
0['
0Z'
0W'
0V'
0'(
0&(
0$(
0#(
0"(
0!(
b1 1(
b0 1(
b0 /(
b0 }'
b0 {'
b0 s'
b0 q'
b11110110 P'
b110011001100110 M'
b1111011001100110011001101000 Q)
b0 G(
b11 F(
b0 D(
b110000000000000000000000 s
01&
b10000011 *!
b111 &)
1()
b1110 }(
0w(
0u(
0t(
0s(
0r(
0q(
0p(
1X(
1.)
b0 ")
b1 #)
b0 ))
b1000 *)
b1111101100110011001100110100 Q)
b1 n(
b10001110 x(
b10 {(
b1111110 x(
b10000011 r
0'!
b1000001110000000000000000000000 j
b0 T'
b1111101100110011001100110100 +!
b0 n'
1r'
b0 p'
1t'
b0 x'
1|'
b0 z'
1~'
b0 ,(
10(
b0 .(
12(
1c'
1b'
1_'
1^'
1['
1Z'
1W'
1V'
1'(
1&(
1$(
1#(
1"(
1!(
b10 1(
b11 1(
02(
b10 /(
00(
b10 }'
0~'
b10 {'
0|'
b10 s'
0t'
b10 q'
0r'
b101 )(
b100 )(
b100 u'
b100 k'
b111110110011001100110011 s
b0 K'
b1000001110000000000000000000000 '
1y(
b1111110 l(
b1000 &)
0()
b11 }(
1w(
0X(
0.)
b1 ")
b0 #)
b1111011001100110011001101000 Q)
b0 n(
b1110011 x(
b0 {(
b10000011 x(
b1111110 k(
b0 (!
b1000001111110110011001100110011 j
b100 g'
b100 i'
b100 Q'
b10 n'
b10 p'
b10 x'
b10 z'
b10 ,(
b11 .(
b110 )(
b111 )(
b110 u'
b110 k'
b10101 S'
b10100 S'
b1100 e'
b1000001111110110011001100110011 '
b1111110 *!
0y(
b10000011 l(
b1111011001100110011001101000 +!
b10 }(
0a(
0w(
b0 ")
b1 #)
b10000010 x(
b111101100110011001100110 s
b10000011 k(
b1111110 r
b1100 N'
b110 g'
b110 i'
b111 Q'
1C(
1B(
b11 L(
b1100 M(
b10110 S'
b10111 S'
b1110 e'
b10000011 *!
b111111011101100110011001100110 j
b10000010 l(
b11 }(
b10000011 x(
b10000010 k(
b111111011101100110011001100110 '
b10000011 r
b1110 N'
b11 I(
0J(
1K(
0C(
0B(
b0 L(
b1111 M(
b1 G(
b10 F(
b11 D(
b1000001111101100110011001100110 j
b10000010 *!
b10000011 l(
b10000011 k(
b10000010 r
b1000001111101100110011001100110 '
b11 T'
b0 I(
1J(
0K(
b0 G(
b11 F(
b0 D(
b11 K'
b1000001011101100110011001100110 j
b10000011 *!
b10000011 r
b1000001011101100110011001100110 '
b11 (!
b0 T'
b0 K'
b1000001111101100110011001100110 j
1b(
1a(
b1000001111101100110011001100110 '
b0 (!
0b(
0a(
03)
b0 $)
b1 }(
b10000001 x(
b10000001 l(
b10000001 k(
b10000001 *!
b10000001 r
b1000000111101100110011001100110 j
b1000000111101100110011001100110 '
b1111011001100110011001101000 U)
b1111011001100110011001101000 R)
#30000
0"
#35000
1"
#40000
0"
#45000
1"
b1 $
1)
12&
b1011100110011001100110010111 4&
16&
b1 U&
1R&
1Q&
1P&
0O&
1N&
0M&
0L&
1K&
1J&
0I&
0H&
1G&
1F&
0E&
0D&
1C&
1B&
0A&
0@&
1?&
1>&
0=&
0<&
1;&
1:&
19&
08&
17&
b111 /'
b1001 ('
b1001 ~&
b1001 v&
b1001 n&
b1001 f&
b1011 ]&
b0 ^&
b0 Z&
0[&
1\&
b1001 b&
b1001 j&
b1001 r&
b1001 z&
b1001 $'
b111 +'
b1111011001100110011001100111 S&
b1111011001100110011010010111 S&
b1111011001100110100110010111 S&
b1111011001101001100110010111 S&
b1111011010011001100110010111 S&
b1111100110011001100110010111 S&
b1000000 W&
b0 V&
b100110011001100110010111 S&
b10000001 U&
b100110011001100110010111 0&
b100110011001100110010111 &!
1T&
0Y(
b11111111 n(
1m(
15&
1P)
1O)
1N)
0M)
1L)
0K)
0J)
1I)
1H)
0G)
0F)
1E)
1D)
0C)
0B)
1A)
1@)
0?)
0>)
1=)
1<)
0;)
0:)
19)
08)
07)
06)
05)
1J'
0I'
0H'
1G'
1F'
0E'
0D'
1C'
1B'
0A'
0@'
1?'
1>'
0='
0<'
1;'
1:'
09'
08'
17'
06'
05'
04'
03'
b1001 P'
b1001100110011001 M'
1w(
1v(
1u(
1t(
1s(
1r(
1q(
1p(
b1 ")
b1110 #)
b1000 ))
b111 *)
1d'
0c'
0b'
1a'
1`'
0_'
0^'
1]'
1\'
0['
0Z'
1Y'
1X'
0W'
0V'
1U'
1((
0'(
0&(
1%(
0$(
0#(
0"(
0!(
b1 1(
b0 1(
b11 /(
b11 }'
b11 {'
b11 s'
b11 q'
b111 &)
1()
b1110 }(
1!)
b1 {(
b10001110 x(
b11 {(
b1111110 x(
b11 n'
b11 p'
b11 x'
b11 z'
b11 ,(
b0 .(
12(
1-(
b111 u'
b111 k'
1y(
b1111110 l(
b1111110 k(
b111 g'
b111 i'
b11 )(
b11 Q'
b1111 e'
b1111110 *!
b1111110 r
b1111 N'
b10011 S'
b111111011101100110011001100110 j
1A(
b100 L(
b1011 M(
b111111011101100110011001100110 '
b100 I(
0J(
1K(
b1 G(
b10 F(
b100 D(
b100 T'
b100 K'
b100 (!
1`(
b11111011 n(
0u(
b1010 #)
b1010 }(
0!)
b10 {(
b1111010 x(
b1111010 l(
b1111010 k(
b1111010 *!
b1111010 r
b111101011101100110011001100110 j
b111101011101100110011001100110 '
1*'
1o(
12)
b1 $)
b11 $)
b111 $)
b10 _&
b110 _&
b1 0'
b11 0'
b111 0'
b1111 0'
b1000 +'
b110 Z&
b1101 }(
b1111101 x(
b110100110011001100110010111 S&
b110100110011001100110011000 S&
b110100110011001100110011000 0&
b1111101 l(
b1111101 k(
b110100110011001100110011000 &!
b1111101 *!
0P)
0O)
0N)
1M)
17)
16)
15'
14'
b1101001 P'
b1111101 r
b111110111101100110011001100110 j
1#(
1"(
b10 1(
02(
b111110111101100110011001100110 '
0-(
b10 .(
b10 )(
b110 )(
b110 Q'
b10111 S'
b10110 S'
1C(
0A(
b1 L(
b1110 M(
b1 I(
b1 D(
b1 T'
b1 K'
b1 (!
1b(
0`(
b11111110 n(
0w(
1u(
b0 ")
b1111 #)
b1000 }(
1~(
b1 z(
b1111000 x(
b1111000 l(
b1111000 k(
b1111000 *!
b1111000 r
b111100011101100110011001100110 j
b111100011101100110011001100110 '
14)
02)
1|(
b1111 $)
b0 }(
b1110000 x(
b1110000 l(
b1110000 k(
b1110000 *!
b1110000 r
b111000011101100110011001100110 j
b111000011101100110011001100110 '
1%)
b1 +)
b11 +)
b111 +)
b1111 +)
b1000 &)
b10000000 x(
b10000000 l(
b10000000 k(
b10000000 *!
b10000000 r
b1000000011101100110011001100110 j
b1000000011101100110011001100110 '
b1101001100110011001100110000 U)
b1101001100110011001100110000 R)
b1101001100110011001100110000 Q)
b1101001100110011001100110000 +!
b110100110011001100110011 s
b1000000010100110011001100110011 j
b1000000010100110011001100110011 '
#50000
0"
#55000
1"
#60000
0"
#65000
1"
b0 $
b11000000000011001100110011001101 &
0)
1J
1l
02&
11&
b100011001100110011001101000 4&
1,"
06&
b10000000 U&
b1100011001100110011001101 c"
1'!
0R&
0Q&
0P&
1O&
0N&
1M&
1L&
0K&
0J&
1I&
1H&
0G&
0F&
1E&
1D&
0C&
0B&
1A&
1@&
0?&
0>&
1=&
1<&
0;&
0:&
09&
18&
07&
b1000 /'
b110 ('
b110 ~&
b110 v&
b110 n&
b110 f&
b0 ]&
b1111 ^&
b1100011001100110011001101 e"
1X(
1.)
b1011010011001100110011001100 Q)
b1 n(
0m(
1_"
b1001 Z&
1[&
0\&
b110 b&
b110 j&
b110 r&
b110 z&
b110 $'
b111 +'
b110100110011001100110010111 S&
b110100110011001100101100111 S&
b110100110011001011001100111 S&
b110100110010110011001100111 S&
b110100101100110011001100111 S&
b110011001100110011001100111 S&
b0 W&
b1000000 V&
b1001011001100110011001100111 S&
1y
b1011010011001100110011001100 +!
1w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
b1 ")
b0 #)
b0 ))
b1000 *)
b101101001100110011001100 s
b0 U&
b1001011001100110011001100111 0&
1n$
b10100011001100110011001101000 O%
b1001011001100110011001100111 &!
0T&
b1000000001101001100110011001100 j
b111 &)
0()
b1111 }(
0~(
1Y(
b0 z(
b10001111 x(
b0 {(
b1111111 x(
b1000000001101001100110011001100 '
05&
b10100011001100110011001101000 Q%
1P)
1O)
1N)
0M)
0L)
1K)
1J)
0I)
0H)
1G)
1F)
0E)
0D)
1C)
1B)
0A)
0@)
1?)
1>)
0=)
0<)
1;)
1:)
09)
18)
07)
06)
15)
0J'
1I'
1H'
0G'
0F'
1E'
1D'
0C'
0B'
1A'
1@'
0?'
0>'
1='
1<'
0;'
0:'
19'
18'
07'
16'
05'
04'
13'
b10010110 P'
b110011001100110 M'
b1100101100110011001100110011 Q)
1K%
01&
0y(
b1111111 l(
b1111111 k(
0'!
1#!
b1100101100110011001100110011 +!
0d'
1c'
1b'
0a'
0`'
1_'
1^'
0]'
0\'
1['
1Z'
0Y'
0X'
1W'
1V'
0U'
0((
1'(
1&(
0%(
1$(
0#(
0"(
1!(
b11 1(
b10 /(
b10 }'
b10 {'
b10 s'
b10 q'
b110010110011001100110011 s
b1111111 *!
0X(
0.)
1U%
12&
b1001011001100110011001100111 Q)
b0 n(
b1111111 r
b111111110010110011001100110011 j
b10 n'
b10 p'
b10 x'
b10 z'
b10 ,(
b11 .(
b111 )(
b110 u'
b110 k'
b111111110010110011001100110011 '
b1001011001100110011001100111 +!
b1011100110011001100110010111 4&
16&
0w(
b0 ")
b1 #)
b1 U&
b100101100110011001100110 s
b110 g'
b110 i'
b111 Q'
1R&
1Q&
1P&
0O&
1N&
0M&
0L&
1K&
1J&
0I&
0H&
1G&
1F&
0E&
0D&
1C&
1B&
0A&
0@&
1?&
1>&
0=&
0<&
1;&
1:&
19&
08&
17&
b111 /'
b1001 ('
b1001 ~&
b1001 v&
b1001 n&
b1001 f&
b1011 ]&
b0 ^&
b10111 S'
b1110 e'
b111111100101100110011001100110 j
b1110 }(
b1111110 x(
b111111100101100110011001100110 '
b1110 N'
b110 Z&
0[&
1\&
b1001 b&
b1001 j&
b1001 r&
b1001 z&
b1001 $'
b1000 +'
0C(
b0 L(
b1111 M(
b1001011001100110011001101000 S&
b1001011001100110011010011000 S&
b1001011001100110100110011000 S&
b1001011001101001100110011000 S&
b1001011010011001100110011000 S&
b1001100110011001100110011000 S&
b1000000 W&
b0 V&
b110100110011001100110011000 S&
b1111110 l(
b1111110 k(
b10000001 U&
b110100110011001100110011000 0&
b0 I(
1J(
0K(
b0 G(
b11 F(
b0 D(
b110100110011001100110011000 &!
1T&
b1111110 *!
0Y(
b11111110 n(
1m(
b1111110 r
15&
b0 T'
0P)
0O)
0N)
1M)
1L)
0K)
0J)
1I)
1H)
0G)
0F)
1E)
1D)
0C)
0B)
1A)
1@)
0?)
0>)
1=)
1<)
0;)
0:)
19)
08)
17)
16)
05)
1J'
0I'
0H'
1G'
1F'
0E'
0D'
1C'
1B'
0A'
0@'
1?'
1>'
0='
0<'
1;'
1:'
09'
08'
17'
06'
15'
14'
03'
b1101001 P'
b1001100110011001 M'
b1101001100110011001100110000 Q)
b0 K'
b111111000101100110011001100110 j
1v(
1u(
1t(
1s(
1r(
1q(
1p(
b1111 #)
b1000 ))
b111 *)
b111111000101100110011001100110 '
b0 (!
b1101001100110011001100110000 +!
1d'
0c'
0b'
1a'
1`'
0_'
0^'
1]'
1\'
0['
0Z'
1Y'
1X'
0W'
0V'
1U'
1((
0'(
0&(
1%(
0$(
1#(
1"(
0!(
b10 1(
b11 /(
b11 }'
b11 {'
b11 s'
b11 q'
b110100110011001100110011 s
b1000 &)
1()
b0 }(
1~(
0b(
b11111111 n(
b1 z(
b1110000 x(
b10 {(
b10000000 x(
b111111010100110011001100110011 j
b11 n'
b11 p'
b11 x'
b11 z'
b11 ,(
b10 .(
b110 )(
b111 u'
b111 k'
b111111010100110011001100110011 '
1y(
b10000000 l(
1w(
b1 ")
b1110 #)
b10000000 k(
b111 g'
b111 i'
b110 Q'
b10110 S'
b1111 e'
b10000000 *!
b1 }(
0~(
1!)
b11 {(
b0 z(
b10000001 x(
b10000000 r
b1111 N'
1C(
b1 L(
b1110 M(
b1000000010100110011001100110011 j
b10000001 l(
b10000001 k(
b1000000010100110011001100110011 '
b1 I(
0J(
1K(
b1 G(
b10 F(
b1 D(
b10000001 *!
b10000001 r
b1 T'
b1 K'
b1000000110100110011001100110011 j
b1000000110100110011001100110011 '
b1 (!
1b(
b11111110 n(
0w(
b0 ")
b1111 #)
b0 }(
1~(
0!)
b10 {(
b1 z(
b10000000 x(
b10000000 l(
b10000000 k(
b10000000 *!
b10000000 r
b1000000010100110011001100110011 j
b1000000010100110011001100110011 '
#70000
0"
#75000
1"
#80000
0"
#85000
1"
b1 $
1)
02&
11&
b100011001100110011001101000 4&
06&
b10000000 U&
1'!
0R&
0Q&
0P&
1O&
0N&
1M&
1L&
0K&
0J&
1I&
1H&
0G&
0F&
1E&
1D&
0C&
0B&
1A&
1@&
0?&
0>&
1=&
1<&
0;&
0:&
09&
18&
07&
b1000 /'
b110 ('
b110 ~&
b110 v&
b110 n&
b110 f&
b0 ]&
b1111 ^&
1X(
1.)
b1011010011001100110011001100 Q)
b1 n(
0m(
b1001 Z&
1[&
0\&
b110 b&
b110 j&
b110 r&
b110 z&
b110 $'
b111 +'
b110100110011001100110010111 S&
b110100110011001100101100111 S&
b110100110011001011001100111 S&
b110100110010110011001100111 S&
b110100101100110011001100111 S&
b110011001100110011001100111 S&
b0 W&
b1000000 V&
b1001011001100110011001100111 S&
b1011010011001100110011001100 +!
1w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
b1 ")
b0 #)
b0 ))
b1000 *)
b101101001100110011001100 s
b0 U&
b1001011001100110011001100111 0&
b1001011001100110011001100111 &!
0T&
b1000000001101001100110011001100 j
b111 &)
0()
b1111 }(
0~(
1Y(
b0 z(
b10001111 x(
b0 {(
b1111111 x(
b1000000001101001100110011001100 '
05&
1P)
1O)
1N)
0M)
0L)
1K)
1J)
0I)
0H)
1G)
1F)
0E)
0D)
1C)
1B)
0A)
0@)
1?)
1>)
0=)
0<)
1;)
1:)
09)
18)
07)
06)
15)
0J'
1I'
1H'
0G'
0F'
1E'
1D'
0C'
0B'
1A'
1@'
0?'
0>'
1='
1<'
0;'
0:'
19'
18'
07'
16'
05'
04'
13'
b10010110 P'
b110011001100110 M'
b1100101100110011001100110011 Q)
01&
0y(
b1111111 l(
b1111111 k(
0'!
b1100101100110011001100110011 +!
0d'
1c'
1b'
0a'
0`'
1_'
1^'
0]'
0\'
1['
1Z'
0Y'
0X'
1W'
1V'
0U'
0((
1'(
1&(
0%(
1$(
0#(
0"(
1!(
b11 1(
b10 /(
b10 }'
b10 {'
b10 s'
b10 q'
b110010110011001100110011 s
b1111111 *!
0X(
0.)
b1001011001100110011001100111 Q)
b0 n(
b1111111 r
b111111110010110011001100110011 j
b10 n'
b10 p'
b10 x'
b10 z'
b10 ,(
b11 .(
b111 )(
b110 u'
b110 k'
b111111110010110011001100110011 '
b1001011001100110011001100111 +!
0w(
b0 ")
b1 #)
b100101100110011001100110 s
b110 g'
b110 i'
b111 Q'
b10111 S'
b1110 e'
b111111100101100110011001100110 j
b1110 }(
b1111110 x(
b111111100101100110011001100110 '
b1110 N'
0C(
b0 L(
b1111 M(
b1111110 l(
b1111110 k(
b0 I(
1J(
0K(
b0 G(
b11 F(
b0 D(
b1111110 *!
b1111110 r
b0 T'
b0 K'
b111111000101100110011001100110 j
b111111000101100110011001100110 '
b0 (!
0b(
0*'
0o(
04)
0|(
b1101 +)
b1001 +)
b1 +)
b1110 $)
b1100 $)
b1000 $)
b0 $)
b100 _&
b0 _&
b1110 0'
b1100 0'
b1000 0'
b0 0'
b1000 +'
b1111 Z&
b1 }(
b1001 &)
b10011110 x(
b10010001 x(
b1111011001100110011001100111 S&
b1111011001100110011001101000 S&
b1111011001100110011001101000 0&
b10010001 l(
b10010001 k(
b1111011001100110011001101000 &!
b10010001 *!
0P)
0O)
0N)
1M)
17)
16)
15'
14'
b11110110 P'
b1111011001100110011001101000 Q)
b10010001 r
b1001000100101100110011001100110 j
b1111011001100110011001101000 +!
1#(
1"(
b111101100110011001100110 s
b1001000100101100110011001100110 '
b1001000111101100110011001100110 j
b1001000111101100110011001100110 '
0%)
b0 +)
b1000 &)
b10000001 x(
b10000001 l(
b10000001 k(
b10000001 *!
b10000001 r
b1000000111101100110011001100110 j
b1000000111101100110011001100110 '
b1111011001100110011001101000 U)
b1111011001100110011001101000 R)
#90000
0"
#95000
1"
#100000
0"
#105000
1"
#110000
0"
